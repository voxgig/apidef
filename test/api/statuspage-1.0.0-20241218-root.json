{
  "main": {
    "api": {
      "guide": {
        "control": {
          "transform": {
            "openapi": {
              "order": "\n      top,\n      entity,\n      operation,\n      field,\n      clean,\n      ",
              "element": {
                "top": {},
                "entity": {},
                "operation": {},
                "field": {}
              }
            }
          },
          "builder": {
            "standard": {
              "order": "\n      entity,\n      flow,\n      ",
              "element": {
                "entity": {},
                "flow": {}
              }
            }
          }
        },
        "entity": {
          "page": {
            "path": {
              "/pages/{page_id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "page"
          },
          "page_access_user": {
            "path": {
              "/pages/{page_id}/page_access_users/{page_access_user_id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/page_access_users": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/components/{component_id}/page_access_users": {
                "op": {}
              }
            },
            "name": "page_access_user"
          },
          "component": {
            "path": {
              "/pages/{page_id}/page_access_users/{page_access_user_id}/components/{component_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/page_access_groups/{page_access_group_id}/components/{component_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/components/{component_id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/page_access_users/{page_access_user_id}/components": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/page_access_groups/{page_access_group_id}/components": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/components": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "component"
          },
          "metric": {
            "path": {
              "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/metrics/{metric_id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/metrics": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "metric"
          },
          "page_access_group": {
            "path": {
              "/pages/{page_id}/page_access_groups/{page_access_group_id}": {
                "op": {
                  "load": {
                    "method": "get",
                    "transform": {}
                  },
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/page_access_groups": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/components/{component_id}/page_access_groups": {
                "op": {}
              }
            },
            "name": "page_access_group"
          },
          "subscriber": {
            "path": {
              "/pages/{page_id}/subscribers/{subscriber_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "update": {
                    "method": "patch",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/subscribers": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/incidents/{incident_id}/subscribers": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "subscriber"
          },
          "incident": {
            "path": {
              "/pages/{page_id}/incidents/{incident_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/incidents": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "incident"
          },
          "incident_update": {
            "path": {
              "/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  }
                }
              }
            },
            "name": "incident_update"
          },
          "component_group": {
            "path": {
              "/pages/{page_id}/component-groups/{id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/component-groups": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "component_group"
          },
          "metrics_provider": {
            "path": {
              "/pages/{page_id}/metrics_providers/{metrics_provider_id}": {
                "op": {
                  "load": {
                    "method": "get",
                    "transform": {}
                  },
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/metrics_providers": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "metrics_provider"
          },
          "permission": {
            "path": {
              "/organizations/{organization_id}/permissions/{user_id}": {
                "op": {
                  "update": {
                    "method": "put",
                    "transform": {}
                  },
                  "load": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "permission"
          },
          "user": {
            "path": {
              "/organizations/{organization_id}/users/{user_id}": {
                "op": {
                  "remove": {
                    "method": "delete",
                    "transform": {}
                  }
                }
              },
              "/organizations/{organization_id}/users": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "user"
          },
          "resend_confirmation": {
            "path": {
              "/pages/{page_id}/subscribers/resend_confirmation": {
                "op": {}
              },
              "/pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation": {
                "op": {}
              },
              "/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation": {
                "op": {}
              }
            },
            "name": "resend_confirmation"
          },
          "unsubscribe": {
            "path": {
              "/pages/{page_id}/subscribers/unsubscribe": {
                "op": {}
              }
            },
            "name": "unsubscribe"
          },
          "reactivate": {
            "path": {
              "/pages/{page_id}/subscribers/reactivate": {
                "op": {}
              }
            },
            "name": "reactivate"
          },
          "histogram_by_state": {
            "path": {
              "/pages/{page_id}/subscribers/histogram_by_state": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "histogram_by_state"
          },
          "count": {
            "path": {
              "/pages/{page_id}/subscribers/count": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "count"
          },
          "unsubscribed": {
            "path": {
              "/pages/{page_id}/subscribers/unsubscribed": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "unsubscribed"
          },
          "incident_template": {
            "path": {
              "/pages/{page_id}/incident_templates": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "incident_template"
          },
          "active_maintenance": {
            "path": {
              "/pages/{page_id}/incidents/active_maintenance": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "active_maintenance"
          },
          "upcoming": {
            "path": {
              "/pages/{page_id}/incidents/upcoming": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "upcoming"
          },
          "scheduled": {
            "path": {
              "/pages/{page_id}/incidents/scheduled": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "scheduled"
          },
          "unresolved": {
            "path": {
              "/pages/{page_id}/incidents/unresolved": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "unresolved"
          },
          "postmortem": {
            "path": {
              "/pages/{page_id}/incidents/{incident_id}/postmortem": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "postmortem"
          },
          "publish": {
            "path": {
              "/pages/{page_id}/incidents/{incident_id}/postmortem/publish": {
                "op": {}
              }
            },
            "name": "publish"
          },
          "revert": {
            "path": {
              "/pages/{page_id}/incidents/{incident_id}/postmortem/revert": {
                "op": {}
              }
            },
            "name": "revert"
          },
          "uptime": {
            "path": {
              "/pages/{page_id}/components/{component_id}/uptime": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              },
              "/pages/{page_id}/component-groups/{id}/uptime": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "uptime"
          },
          "datum": {
            "path": {
              "/pages/{page_id}/metrics/data": {
                "op": {}
              },
              "/pages/{page_id}/metrics/{metric_id}/data": {
                "op": {}
              }
            },
            "name": "datum"
          },
          "status_embed_config": {
            "path": {
              "/pages/{page_id}/status_embed_config": {
                "op": {
                  "list": {
                    "method": "get",
                    "transform": {}
                  }
                }
              }
            },
            "name": "status_embed_config"
          }
        }
      },
      "entity": {
        "put_organizations_organization_id_permission": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/organizations/{organization_id}/permissions/{user_id}",
              "pathalt": [
                {
                  "path": "/organizations/{organization_id}/permissions/{user_id}",
                  "organization_id": true,
                  "user_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "organization_id": {
                  "required": true,
                  "name": "organization_id",
                  "Name": "OrganizationId",
                  "NAME": "ORGANIZATION_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body.data`",
              "reqform": {
                "pages": "`reqdata`"
              },
              "validate": {
                "params": {
                  "organization_id": "`$STRING`",
                  "user_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "organization"
          ],
          "name": "put_organizations_organization_id_permission",
          "Name": "PutOrganizationsOrganizationIdPermission",
          "NAME": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION",
          "key$": "put_organizations_organization_id_permission"
        },
        "permission": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/organizations/{organization_id}/permissions/{user_id}",
              "pathalt": [
                {
                  "path": "/organizations/{organization_id}/permissions/{user_id}",
                  "organization_id": true,
                  "user_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "organization_id": {
                  "required": true,
                  "name": "organization_id",
                  "Name": "OrganizationId",
                  "NAME": "ORGANIZATION_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body.data`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "organization_id": "`$STRING`",
                  "user_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "data": {
              "name": "data",
              "Name": "Data",
              "NAME": "DATA",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "organization"
          ],
          "name": "permission",
          "Name": "Permission",
          "NAME": "PERMISSION",
          "key$": "permission"
        },
        "post_organizations_organization_id_user": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/organizations/{organization_id}/users",
              "pathalt": [
                {
                  "path": "/organizations/{organization_id}/users",
                  "organization_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "organization_id": {
                  "required": true,
                  "name": "organization_id",
                  "Name": "OrganizationId",
                  "NAME": "ORGANIZATION_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "user": "`reqdata`"
              },
              "validate": {
                "params": {
                  "organization_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "organization"
          ],
          "name": "post_organizations_organization_id_user",
          "Name": "PostOrganizationsOrganizationIdUser",
          "NAME": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER",
          "key$": "post_organizations_organization_id_user"
        },
        "error_entity": {
          "alias": {
            "field": {}
          },
          "op": {
            "list": {
              "path": "/pages",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/subscribers",
                  "page_id": true,
                  "incident_id": true,
                  "organization_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
                  "page_id": true,
                  "page_access_group_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
                  "page_id": true,
                  "page_access_user_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
                  "page_id": true,
                  "page_access_user_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false
                },
                {
                  "path": "/organizations/{organization_id}/users",
                  "organization_id": true,
                  "page_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/component-groups",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/components",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incident_templates",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incidents",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incidents/active_maintenance",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incidents/scheduled",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incidents/unresolved",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incidents/upcoming",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/metrics_providers",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_groups",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_users",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/subscribers",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/subscribers/unsubscribed",
                  "page_id": true,
                  "organization_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages",
                  "organization_id": false,
                  "page_id": false,
                  "incident_id": false,
                  "page_access_group_id": false,
                  "page_access_user_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "organization_id": {
                  "required": true,
                  "name": "organization_id",
                  "Name": "OrganizationId",
                  "NAME": "ORGANIZATION_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "per_page": {
                  "required": false,
                  "name": "per_page",
                  "Name": "PerPage",
                  "NAME": "PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "list",
              "Name": "List",
              "NAME": "LIST"
            },
            "remove": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}",
                  "page_id": true,
                  "component_id": true,
                  "incident_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/postmortem",
                  "page_id": true,
                  "incident_id": true,
                  "component_id": false,
                  "page_access_user_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}",
                  "page_id": true,
                  "page_access_user_id": true,
                  "component_id": false,
                  "incident_id": false
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            },
            "create": {
              "path": "/pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation",
                  "page_id": true,
                  "subscriber_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "subscriber_id": {
                  "required": true,
                  "name": "subscriber_id",
                  "Name": "SubscriberId",
                  "NAME": "SUBSCRIBER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`reqdata`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "subscriber_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "organization"
          ],
          "name": "error_entity",
          "Name": "ErrorEntity",
          "NAME": "ERROR_ENTITY",
          "key$": "error_entity"
        },
        "user": {
          "alias": {
            "field": {
              "user_id": "id",
              "id": "user_id"
            }
          },
          "op": {
            "remove": {
              "path": "/organizations/{organization_id}/users/{user_id}",
              "pathalt": [
                {
                  "path": "/organizations/{organization_id}/users/{user_id}",
                  "organization_id": true,
                  "user_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "organization_id": {
                  "required": true,
                  "name": "organization_id",
                  "Name": "OrganizationId",
                  "NAME": "ORGANIZATION_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "user_id": {
                  "required": true,
                  "name": "user_id",
                  "Name": "UserId",
                  "NAME": "USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "organization_id": "`$STRING`",
                  "user_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "organization"
          ],
          "name": "user",
          "Name": "User",
          "NAME": "USER",
          "key$": "user"
        },
        "patch_page": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}",
                  "page_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "page": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "patch_page",
          "Name": "PatchPage",
          "NAME": "PATCH_PAGE",
          "key$": "patch_page"
        },
        "put_page": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}",
                  "page_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "page": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [],
          "name": "put_page",
          "Name": "PutPage",
          "NAME": "PUT_PAGE",
          "key$": "put_page"
        },
        "page": {
          "alias": {
            "field": {
              "page_id": "id",
              "id": "page_id"
            }
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}",
                  "page_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Page identifier"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Timestamp the record was created"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Timestamp the record was last updated"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Name of your page to be displayed"
            },
            "page_description": {
              "name": "page_description",
              "Name": "PageDescription",
              "NAME": "PAGE_DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "headline": {
              "name": "headline",
              "Name": "Headline",
              "NAME": "HEADLINE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "branding": {
              "name": "branding",
              "Name": "Branding",
              "NAME": "BRANDING",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The main template your statuspage will use"
            },
            "subdomain": {
              "name": "subdomain",
              "Name": "Subdomain",
              "NAME": "SUBDOMAIN",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Subdomain at which to access your status page"
            },
            "domain": {
              "name": "domain",
              "Name": "Domain",
              "NAME": "DOMAIN",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CNAME alias for your status page"
            },
            "url": {
              "name": "url",
              "Name": "Url",
              "NAME": "URL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Website of your page.  Clicking on your statuspage image will link here."
            },
            "support_url": {
              "name": "support_url",
              "Name": "SupportUrl",
              "NAME": "SUPPORT_URL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "hidden_from_search": {
              "name": "hidden_from_search",
              "Name": "HiddenFromSearch",
              "NAME": "HIDDEN_FROM_SEARCH",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Should your page hide itself from search engines"
            },
            "allow_page_subscribers": {
              "name": "allow_page_subscribers",
              "Name": "AllowPageSubscribers",
              "NAME": "ALLOW_PAGE_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Can your users subscribe to all notifications on the page"
            },
            "allow_incident_subscribers": {
              "name": "allow_incident_subscribers",
              "Name": "AllowIncidentSubscribers",
              "NAME": "ALLOW_INCIDENT_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Can your users subscribe to notifications for a single incident"
            },
            "allow_email_subscribers": {
              "name": "allow_email_subscribers",
              "Name": "AllowEmailSubscribers",
              "NAME": "ALLOW_EMAIL_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Can your users choose to receive notifications via email"
            },
            "allow_sms_subscribers": {
              "name": "allow_sms_subscribers",
              "Name": "AllowSmsSubscribers",
              "NAME": "ALLOW_SMS_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Can your users choose to receive notifications via SMS"
            },
            "allow_rss_atom_feeds": {
              "name": "allow_rss_atom_feeds",
              "Name": "AllowRssAtomFeeds",
              "NAME": "ALLOW_RSS_ATOM_FEEDS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Can your users choose to access incident feeds via RSS/Atom (not functional on Audience-Specific pages)"
            },
            "allow_webhook_subscribers": {
              "name": "allow_webhook_subscribers",
              "Name": "AllowWebhookSubscribers",
              "NAME": "ALLOW_WEBHOOK_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Can your users choose to receive notifications via Webhooks"
            },
            "notifications_from_email": {
              "name": "notifications_from_email",
              "Name": "NotificationsFromEmail",
              "NAME": "NOTIFICATIONS_FROM_EMAIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Allows you to customize the email address your page notifications come from"
            },
            "notifications_email_footer": {
              "name": "notifications_email_footer",
              "Name": "NotificationsEmailFooter",
              "NAME": "NOTIFICATIONS_EMAIL_FOOTER",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Allows you to customize the footer appearing on your notification emails.  Accepts Markdown for formatting"
            },
            "activity_score": {
              "name": "activity_score",
              "Name": "ActivityScore",
              "NAME": "ACTIVITY_SCORE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER"
            },
            "twitter_username": {
              "name": "twitter_username",
              "Name": "TwitterUsername",
              "NAME": "TWITTER_USERNAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "viewers_must_be_team_members": {
              "name": "viewers_must_be_team_members",
              "Name": "ViewersMustBeTeamMembers",
              "NAME": "VIEWERS_MUST_BE_TEAM_MEMBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN"
            },
            "ip_restrictions": {
              "name": "ip_restrictions",
              "Name": "IpRestrictions",
              "NAME": "IP_RESTRICTIONS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "city": {
              "name": "city",
              "Name": "City",
              "NAME": "CITY",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "state": {
              "name": "state",
              "Name": "State",
              "NAME": "STATE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "country": {
              "name": "country",
              "Name": "Country",
              "NAME": "COUNTRY",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "time_zone": {
              "name": "time_zone",
              "Name": "TimeZone",
              "NAME": "TIME_ZONE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Timezone configured for your page"
            },
            "css_body_background_color": {
              "name": "css_body_background_color",
              "Name": "CssBodyBackgroundColor",
              "NAME": "CSS_BODY_BACKGROUND_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_font_color": {
              "name": "css_font_color",
              "Name": "CssFontColor",
              "NAME": "CSS_FONT_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_light_font_color": {
              "name": "css_light_font_color",
              "Name": "CssLightFontColor",
              "NAME": "CSS_LIGHT_FONT_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_greens": {
              "name": "css_greens",
              "Name": "CssGreens",
              "NAME": "CSS_GREENS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_yellows": {
              "name": "css_yellows",
              "Name": "CssYellows",
              "NAME": "CSS_YELLOWS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_oranges": {
              "name": "css_oranges",
              "Name": "CssOranges",
              "NAME": "CSS_ORANGES",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_blues": {
              "name": "css_blues",
              "Name": "CssBlues",
              "NAME": "CSS_BLUES",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_reds": {
              "name": "css_reds",
              "Name": "CssReds",
              "NAME": "CSS_REDS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_border_color": {
              "name": "css_border_color",
              "Name": "CssBorderColor",
              "NAME": "CSS_BORDER_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_graph_color": {
              "name": "css_graph_color",
              "Name": "CssGraphColor",
              "NAME": "CSS_GRAPH_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_link_color": {
              "name": "css_link_color",
              "Name": "CssLinkColor",
              "NAME": "CSS_LINK_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "css_no_data": {
              "name": "css_no_data",
              "Name": "CssNoData",
              "NAME": "CSS_NO_DATA",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "CSS Color"
            },
            "favicon_logo": {
              "name": "favicon_logo",
              "Name": "FaviconLogo",
              "NAME": "FAVICON_LOGO",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "transactional_logo": {
              "name": "transactional_logo",
              "Name": "TransactionalLogo",
              "NAME": "TRANSACTIONAL_LOGO",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "hero_cover": {
              "name": "hero_cover",
              "Name": "HeroCover",
              "NAME": "HERO_COVER",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "email_logo": {
              "name": "email_logo",
              "Name": "EmailLogo",
              "NAME": "EMAIL_LOGO",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "twitter_logo": {
              "name": "twitter_logo",
              "Name": "TwitterLogo",
              "NAME": "TWITTER_LOGO",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "page_id"
          },
          "ancestors": [],
          "name": "page",
          "Name": "Page",
          "NAME": "PAGE",
          "key$": "page"
        },
        "post_pages_page_id_component_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/component-groups",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/component-groups",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_component_group",
          "Name": "PostPagesPageIdComponentGroup",
          "NAME": "POST_PAGES_PAGE_ID_COMPONENT_GROUP",
          "key$": "post_pages_page_id_component_group"
        },
        "patch_pages_page_id_component_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/component-groups/{id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/component-groups/{id}",
                  "page_id": true,
                  "id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_component_group",
          "Name": "PatchPagesPageIdComponentGroup",
          "NAME": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP",
          "key$": "patch_pages_page_id_component_group"
        },
        "put_pages_page_id_component_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/component-groups/{id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/component-groups/{id}",
                  "page_id": true,
                  "id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_component_group",
          "Name": "PutPagesPageIdComponentGroup",
          "NAME": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP",
          "key$": "put_pages_page_id_component_group"
        },
        "group_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "remove": {
              "path": "/pages/{page_id}/component-groups/{id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/component-groups/{id}",
                  "page_id": true,
                  "id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            },
            "load": {
              "path": "/pages/{page_id}/component-groups/{id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/component-groups/{id}",
                  "page_id": true,
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Component Group Identifier"
            },
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "components": {
              "name": "components",
              "Name": "Components",
              "NAME": "COMPONENTS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "position": {
              "name": "position",
              "Name": "Position",
              "NAME": "POSITION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "group_component",
          "Name": "GroupComponent",
          "NAME": "GROUP_COMPONENT",
          "key$": "group_component"
        },
        "component_group_uptime": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/component-groups/{id}/uptime",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/component-groups/{id}/uptime",
                  "page_id": true,
                  "id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "id": {
                  "required": true,
                  "name": "id",
                  "Name": "Id",
                  "NAME": "ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "start": {
                  "required": false,
                  "name": "start",
                  "Name": "Start",
                  "NAME": "START",
                  "type": "partialstartdate",
                  "Type": "PartialStartDate",
                  "TYPE": "PARTIALSTARTDATE"
                },
                "end": {
                  "required": false,
                  "name": "end",
                  "Name": "End",
                  "NAME": "END",
                  "type": "partialenddate",
                  "Type": "PartialEndDate",
                  "TYPE": "PARTIALENDDATE"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "range_start": {
              "name": "range_start",
              "Name": "RangeStart",
              "NAME": "RANGE_START",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Start date used for uptime calculation (see the warnings field in the response if this value does not match the start parameter you provided)."
            },
            "range_end": {
              "name": "range_end",
              "Name": "RangeEnd",
              "NAME": "RANGE_END",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "End date used for uptime calculation (see the warnings field in the response if this value does not match the end parameter you provided)."
            },
            "uptime_percentage": {
              "name": "uptime_percentage",
              "Name": "UptimePercentage",
              "NAME": "UPTIME_PERCENTAGE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Uptime percentage for a component"
            },
            "major_outage": {
              "name": "major_outage",
              "Name": "MajorOutage",
              "NAME": "MAJOR_OUTAGE",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Seconds of major outage"
            },
            "partial_outage": {
              "name": "partial_outage",
              "Name": "PartialOutage",
              "NAME": "PARTIAL_OUTAGE",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Seconds of partial outage"
            },
            "warnings": {
              "name": "warnings",
              "Name": "Warnings",
              "NAME": "WARNINGS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Warning messages related to the uptime query that may occur"
            },
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Component group identifier"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Component group display name"
            },
            "related_events": {
              "name": "related_events",
              "Name": "RelatedEvents",
              "NAME": "RELATED_EVENTS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Related incidents by component"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "component_group"
          ],
          "name": "component_group_uptime",
          "Name": "ComponentGroupUptime",
          "NAME": "COMPONENT_GROUP_UPTIME",
          "key$": "component_group_uptime"
        },
        "post_pages_page_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_component",
          "Name": "PostPagesPageIdComponent",
          "NAME": "POST_PAGES_PAGE_ID_COMPONENT",
          "key$": "post_pages_page_id_component"
        },
        "patch_pages_page_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/components/{component_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}",
                  "page_id": true,
                  "component_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_component",
          "Name": "PatchPagesPageIdComponent",
          "NAME": "PATCH_PAGES_PAGE_ID_COMPONENT",
          "key$": "patch_pages_page_id_component"
        },
        "put_pages_page_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/components/{component_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}",
                  "page_id": true,
                  "component_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_component",
          "Name": "PutPagesPageIdComponent",
          "NAME": "PUT_PAGES_PAGE_ID_COMPONENT",
          "key$": "put_pages_page_id_component"
        },
        "component": {
          "alias": {
            "field": {
              "component_id": "id",
              "id": "component_id"
            }
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/components/{component_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}",
                  "page_id": true,
                  "component_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "remove": {
              "path": "/pages/{page_id}/components/{component_id}/page_access_users",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}/page_access_groups",
                  "page_id": true,
                  "component_id": true
                },
                {
                  "path": "/pages/{page_id}/components/{component_id}/page_access_users",
                  "page_id": true,
                  "component_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            },
            "create": {
              "path": "/pages/{page_id}/components/{component_id}/page_access_users",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}/page_access_groups",
                  "page_id": true,
                  "component_id": true
                },
                {
                  "path": "/pages/{page_id}/components/{component_id}/page_access_users",
                  "page_id": true,
                  "component_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Identifier for component"
            },
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Page identifier"
            },
            "group_id": {
              "name": "group_id",
              "Name": "GroupId",
              "NAME": "GROUP_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Component Group identifier"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "group": {
              "name": "group",
              "Name": "Group",
              "NAME": "GROUP",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Is this component a group"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Display name for component"
            },
            "description": {
              "name": "description",
              "Name": "Description",
              "NAME": "DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "More detailed description for component"
            },
            "position": {
              "name": "position",
              "Name": "Position",
              "NAME": "POSITION",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Order the component will appear on the page"
            },
            "status": {
              "name": "status",
              "Name": "Status",
              "NAME": "STATUS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Status of component"
            },
            "showcase": {
              "name": "showcase",
              "Name": "Showcase",
              "NAME": "SHOWCASE",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Should this component be showcased"
            },
            "only_show_if_degraded": {
              "name": "only_show_if_degraded",
              "Name": "OnlyShowIfDegraded",
              "NAME": "ONLY_SHOW_IF_DEGRADED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Requires a special feature flag to be enabled"
            },
            "automation_email": {
              "name": "automation_email",
              "Name": "AutomationEmail",
              "NAME": "AUTOMATION_EMAIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Requires a special feature flag to be enabled"
            },
            "start_date": {
              "name": "start_date",
              "Name": "StartDate",
              "NAME": "START_DATE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The date this component started being used"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "component",
          "Name": "Component",
          "NAME": "COMPONENT",
          "key$": "component"
        },
        "component_uptime": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/components/{component_id}/uptime",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/components/{component_id}/uptime",
                  "page_id": true,
                  "component_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "start": {
                  "required": false,
                  "name": "start",
                  "Name": "Start",
                  "NAME": "START",
                  "type": "partialstartdate",
                  "Type": "PartialStartDate",
                  "TYPE": "PARTIALSTARTDATE"
                },
                "end": {
                  "required": false,
                  "name": "end",
                  "Name": "End",
                  "NAME": "END",
                  "type": "partialenddate",
                  "Type": "PartialEndDate",
                  "TYPE": "PARTIALENDDATE"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "range_start": {
              "name": "range_start",
              "Name": "RangeStart",
              "NAME": "RANGE_START",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Start date used for uptime calculation (see the warnings field in the response if this value does not match the start parameter you provided)."
            },
            "range_end": {
              "name": "range_end",
              "Name": "RangeEnd",
              "NAME": "RANGE_END",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "End date used for uptime calculation (see the warnings field in the response if this value does not match the end parameter you provided)."
            },
            "uptime_percentage": {
              "name": "uptime_percentage",
              "Name": "UptimePercentage",
              "NAME": "UPTIME_PERCENTAGE",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER",
              "short": "Uptime percentage for a component"
            },
            "major_outage": {
              "name": "major_outage",
              "Name": "MajorOutage",
              "NAME": "MAJOR_OUTAGE",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Seconds of major outage"
            },
            "partial_outage": {
              "name": "partial_outage",
              "Name": "PartialOutage",
              "NAME": "PARTIAL_OUTAGE",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "Seconds of partial outage"
            },
            "warnings": {
              "name": "warnings",
              "Name": "Warnings",
              "NAME": "WARNINGS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Warning messages related to the uptime query that may occur"
            },
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Component identifier"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Component display name"
            },
            "related_events": {
              "name": "related_events",
              "Name": "RelatedEvents",
              "NAME": "RELATED_EVENTS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Related incidents"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "component"
          ],
          "name": "component_uptime",
          "Name": "ComponentUptime",
          "NAME": "COMPONENT_UPTIME",
          "key$": "component_uptime"
        },
        "post_pages_page_id_incident_template": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/incident_templates",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incident_templates",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "template": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_incident_template",
          "Name": "PostPagesPageIdIncidentTemplate",
          "NAME": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE",
          "key$": "post_pages_page_id_incident_template"
        },
        "post_pages_page_id_incident": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/incidents",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "incident": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_incident",
          "Name": "PostPagesPageIdIncident",
          "NAME": "POST_PAGES_PAGE_ID_INCIDENT",
          "key$": "post_pages_page_id_incident"
        },
        "incident": {
          "alias": {
            "field": {
              "incident_id": "id",
              "id": "incident_id"
            }
          },
          "op": {
            "remove": {
              "path": "/pages/{page_id}/incidents/{incident_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            },
            "load": {
              "path": "/pages/{page_id}/incidents/{incident_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Incident Identifier"
            },
            "components": {
              "name": "components",
              "Name": "Components",
              "NAME": "COMPONENTS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "Incident components"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when the incident was created at."
            },
            "impact": {
              "name": "impact",
              "Name": "Impact",
              "NAME": "IMPACT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The impact of the incident."
            },
            "impact_override": {
              "name": "impact_override",
              "Name": "ImpactOverride",
              "NAME": "IMPACT_OVERRIDE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "value to override calculated impact value"
            },
            "incident_updates": {
              "name": "incident_updates",
              "Name": "IncidentUpdates",
              "NAME": "INCIDENT_UPDATES",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY",
              "short": "The incident updates for incident."
            },
            "metadata": {
              "name": "metadata",
              "Name": "Metadata",
              "NAME": "METADATA",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT",
              "short": "Metadata attached to the incident. Top level values must be objects."
            },
            "monitoring_at": {
              "name": "monitoring_at",
              "Name": "MonitoringAt",
              "NAME": "MONITORING_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when incident entered monitoring state."
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Incident Name. There is a maximum limit of 255 characters."
            },
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Incident Page Identifier"
            },
            "postmortem_body": {
              "name": "postmortem_body",
              "Name": "PostmortemBody",
              "NAME": "POSTMORTEM_BODY",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Body of the Postmortem."
            },
            "postmortem_body_last_updated_at": {
              "name": "postmortem_body_last_updated_at",
              "Name": "PostmortemBodyLastUpdatedAt",
              "NAME": "POSTMORTEM_BODY_LAST_UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when the incident postmortem body was last updated at."
            },
            "postmortem_ignored": {
              "name": "postmortem_ignored",
              "Name": "PostmortemIgnored",
              "NAME": "POSTMORTEM_IGNORED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether the incident will have postmortem."
            },
            "postmortem_notified_subscribers": {
              "name": "postmortem_notified_subscribers",
              "Name": "PostmortemNotifiedSubscribers",
              "NAME": "POSTMORTEM_NOTIFIED_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Indicates whether subscribers are already notificed about postmortem."
            },
            "postmortem_notified_twitter": {
              "name": "postmortem_notified_twitter",
              "Name": "PostmortemNotifiedTwitter",
              "NAME": "POSTMORTEM_NOTIFIED_TWITTER",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether to decide if notify postmortem on twitter."
            },
            "postmortem_published_at": {
              "name": "postmortem_published_at",
              "Name": "PostmortemPublishedAt",
              "NAME": "POSTMORTEM_PUBLISHED_AT",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "The timestamp when the postmortem was published."
            },
            "resolved_at": {
              "name": "resolved_at",
              "Name": "ResolvedAt",
              "NAME": "RESOLVED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when incident was resolved."
            },
            "scheduled_auto_completed": {
              "name": "scheduled_auto_completed",
              "Name": "ScheduledAutoCompleted",
              "NAME": "SCHEDULED_AUTO_COMPLETED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether the incident is scheduled to automatically change to complete."
            },
            "scheduled_auto_in_progress": {
              "name": "scheduled_auto_in_progress",
              "Name": "ScheduledAutoInProgress",
              "NAME": "SCHEDULED_AUTO_IN_PROGRESS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether the incident is scheduled to automatically change to in progress."
            },
            "scheduled_for": {
              "name": "scheduled_for",
              "Name": "ScheduledFor",
              "NAME": "SCHEDULED_FOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp the incident is scheduled for."
            },
            "auto_transition_deliver_notifications_at_end": {
              "name": "auto_transition_deliver_notifications_at_end",
              "Name": "AutoTransitionDeliverNotificationsAtEnd",
              "NAME": "AUTO_TRANSITION_DELIVER_NOTIFICATIONS_AT_END",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether send notification when scheduled maintenances auto transition to completed."
            },
            "auto_transition_deliver_notifications_at_start": {
              "name": "auto_transition_deliver_notifications_at_start",
              "Name": "AutoTransitionDeliverNotificationsAtStart",
              "NAME": "AUTO_TRANSITION_DELIVER_NOTIFICATIONS_AT_START",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether send notification when scheduled maintenances auto transition to started."
            },
            "auto_transition_to_maintenance_state": {
              "name": "auto_transition_to_maintenance_state",
              "Name": "AutoTransitionToMaintenanceState",
              "NAME": "AUTO_TRANSITION_TO_MAINTENANCE_STATE",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether change components status to under_maintenance once scheduled maintenance is in progress."
            },
            "auto_transition_to_operational_state": {
              "name": "auto_transition_to_operational_state",
              "Name": "AutoTransitionToOperationalState",
              "NAME": "AUTO_TRANSITION_TO_OPERATIONAL_STATE",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether change components status to operational once scheduled maintenance completes."
            },
            "scheduled_remind_prior": {
              "name": "scheduled_remind_prior",
              "Name": "ScheduledRemindPrior",
              "NAME": "SCHEDULED_REMIND_PRIOR",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Controls whether to remind subscribers prior to scheduled incidents."
            },
            "scheduled_reminded_at": {
              "name": "scheduled_reminded_at",
              "Name": "ScheduledRemindedAt",
              "NAME": "SCHEDULED_REMINDED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when the scheduled incident reminder was sent at."
            },
            "scheduled_until": {
              "name": "scheduled_until",
              "Name": "ScheduledUntil",
              "NAME": "SCHEDULED_UNTIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp the incident is scheduled until."
            },
            "shortlink": {
              "name": "shortlink",
              "Name": "Shortlink",
              "NAME": "SHORTLINK",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Incident Shortlink."
            },
            "status": {
              "name": "status",
              "Name": "Status",
              "NAME": "STATUS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed."
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when the incident was updated at."
            },
            "reminder_intervals": {
              "name": "reminder_intervals",
              "Name": "ReminderIntervals",
              "NAME": "REMINDER_INTERVALS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Custom reminder intervals for unresolved/open incidents. Not applicable for <strong>Scheduled maintenance</strong><br>There are 4 possible states for reminder_intervals:<br><strong>DEFAULT:</strong> NULL, representing a default behavior with intervals [3, 6, 12, 24].<br><strong>AFTER:</strong> A serialized array of strictly increasing intervals, each integer ranges from [1-24] (inclusive). Ex \"[1, 5, 7, 10]\"<br><strong>EVERY:</strong> An integer in the range [1-24] as a string, representing equal intervals. Ex \"4\" for [4, 8, 12, 16, 20, 24]<br><strong>OFF:</strong> A serialized empty array, for example, \"[]\", meaning no reminder notifications will be sent."
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "incident",
          "Name": "Incident",
          "NAME": "INCIDENT",
          "key$": "incident"
        },
        "patch_pages_page_id_incident": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "incident": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_incident",
          "Name": "PatchPagesPageIdIncident",
          "NAME": "PATCH_PAGES_PAGE_ID_INCIDENT",
          "key$": "patch_pages_page_id_incident"
        },
        "put_pages_page_id_incident": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "incident": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_incident",
          "Name": "PutPagesPageIdIncident",
          "NAME": "PUT_PAGES_PAGE_ID_INCIDENT",
          "key$": "put_pages_page_id_incident"
        },
        "patch_pages_page_id_incidents_incident_id_incident_update": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}",
                  "page_id": true,
                  "incident_id": true,
                  "incident_update_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_update_id": {
                  "required": true,
                  "name": "incident_update_id",
                  "Name": "IncidentUpdateId",
                  "NAME": "INCIDENT_UPDATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "incident_update": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`",
                  "incident_update_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "patch_pages_page_id_incidents_incident_id_incident_update",
          "Name": "PatchPagesPageIdIncidentsIncidentIdIncidentUpdate",
          "NAME": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE",
          "key$": "patch_pages_page_id_incidents_incident_id_incident_update"
        },
        "put_pages_page_id_incidents_incident_id_incident_update": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}",
                  "page_id": true,
                  "incident_id": true,
                  "incident_update_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_update_id": {
                  "required": true,
                  "name": "incident_update_id",
                  "Name": "IncidentUpdateId",
                  "NAME": "INCIDENT_UPDATE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "incident_update": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`",
                  "incident_update_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "put_pages_page_id_incidents_incident_id_incident_update",
          "Name": "PutPagesPageIdIncidentsIncidentIdIncidentUpdate",
          "NAME": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE",
          "key$": "put_pages_page_id_incidents_incident_id_incident_update"
        },
        "postmortem": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/incidents/{incident_id}/postmortem",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/postmortem",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}/postmortem/revert",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/postmortem/revert",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {
            "preview_key": {
              "name": "preview_key",
              "Name": "PreviewKey",
              "NAME": "PREVIEW_KEY",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Preview Key"
            },
            "body": {
              "name": "body",
              "Name": "Body",
              "NAME": "BODY",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Postmortem body"
            },
            "body_updated_at": {
              "name": "body_updated_at",
              "Name": "BodyUpdatedAt",
              "NAME": "BODY_UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "body_draft": {
              "name": "body_draft",
              "Name": "BodyDraft",
              "NAME": "BODY_DRAFT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Body draft"
            },
            "body_draft_updated_at": {
              "name": "body_draft_updated_at",
              "Name": "BodyDraftUpdatedAt",
              "NAME": "BODY_DRAFT_UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "published_at": {
              "name": "published_at",
              "Name": "PublishedAt",
              "NAME": "PUBLISHED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "notify_subscribers": {
              "name": "notify_subscribers",
              "Name": "NotifySubscribers",
              "NAME": "NOTIFY_SUBSCRIBERS",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Should email subscribers be notified."
            },
            "notify_twitter": {
              "name": "notify_twitter",
              "Name": "NotifyTwitter",
              "NAME": "NOTIFY_TWITTER",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Should Twitter followers be notified."
            },
            "custom_tweet": {
              "name": "custom_tweet",
              "Name": "CustomTweet",
              "NAME": "CUSTOM_TWEET",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Custom tweet for Incident Postmortem"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "postmortem",
          "Name": "Postmortem",
          "NAME": "POSTMORTEM",
          "key$": "postmortem"
        },
        "put_pages_page_id_incidents_incident_id_postmortem": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}/postmortem",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/postmortem",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "postmortem": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "put_pages_page_id_incidents_incident_id_postmortem",
          "Name": "PutPagesPageIdIncidentsIncidentIdPostmortem",
          "NAME": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM",
          "key$": "put_pages_page_id_incidents_incident_id_postmortem"
        },
        "put_pages_page_id_incidents_incident_id_postmortem_publish": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/incidents/{incident_id}/postmortem/publish",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/postmortem/publish",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "postmortem": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "put_pages_page_id_incidents_incident_id_postmortem_publish",
          "Name": "PutPagesPageIdIncidentsIncidentIdPostmortemPublish",
          "NAME": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH",
          "key$": "put_pages_page_id_incidents_incident_id_postmortem_publish"
        },
        "post_pages_page_id_incidents_incident_id_subscriber": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/incidents/{incident_id}/subscribers",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/subscribers",
                  "page_id": true,
                  "incident_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "subscriber": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "post_pages_page_id_incidents_incident_id_subscriber",
          "Name": "PostPagesPageIdIncidentsIncidentIdSubscriber",
          "NAME": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER",
          "key$": "post_pages_page_id_incidents_incident_id_subscriber"
        },
        "subscriber": {
          "alias": {
            "field": {
              "subscriber_id": "id",
              "id": "subscriber_id"
            }
          },
          "op": {
            "remove": {
              "path": "/pages/{page_id}/subscribers/{subscriber_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}",
                  "page_id": true,
                  "incident_id": true,
                  "subscriber_id": true
                },
                {
                  "path": "/pages/{page_id}/subscribers/{subscriber_id}",
                  "page_id": true,
                  "subscriber_id": true,
                  "incident_id": false
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "subscriber_id": {
                  "required": true,
                  "name": "subscriber_id",
                  "Name": "SubscriberId",
                  "NAME": "SUBSCRIBER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "skip_unsubscription_notification": {
                  "required": false,
                  "name": "skip_unsubscription_notification",
                  "Name": "SkipUnsubscriptionNotification",
                  "NAME": "SKIP_UNSUBSCRIPTION_NOTIFICATION",
                  "type": "boolean",
                  "Type": "Boolean",
                  "TYPE": "BOOLEAN"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "subscriber_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            },
            "load": {
              "path": "/pages/{page_id}/subscribers/{subscriber_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}",
                  "page_id": true,
                  "incident_id": true,
                  "subscriber_id": true
                },
                {
                  "path": "/pages/{page_id}/subscribers/{subscriber_id}",
                  "page_id": true,
                  "subscriber_id": true,
                  "incident_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "subscriber_id": {
                  "required": true,
                  "name": "subscriber_id",
                  "Name": "SubscriberId",
                  "NAME": "SUBSCRIBER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "subscriber_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Subscriber Identifier"
            },
            "skip_confirmation_notification": {
              "name": "skip_confirmation_notification",
              "Name": "SkipConfirmationNotification",
              "NAME": "SKIP_CONFIRMATION_NOTIFICATION",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "If this is true, do not notify the user with changes to their subscription."
            },
            "mode": {
              "name": "mode",
              "Name": "Mode",
              "NAME": "MODE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The communication mode of the subscriber."
            },
            "email": {
              "name": "email",
              "Name": "Email",
              "NAME": "EMAIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The email address to use to contact the subscriber. Used for Email and Webhook subscribers."
            },
            "endpoint": {
              "name": "endpoint",
              "Name": "Endpoint",
              "NAME": "ENDPOINT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The URL where a webhook subscriber elects to receive updates."
            },
            "phone_number": {
              "name": "phone_number",
              "Name": "PhoneNumber",
              "NAME": "PHONE_NUMBER",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The phone number used to contact an SMS subscriber"
            },
            "phone_country": {
              "name": "phone_country",
              "Name": "PhoneCountry",
              "NAME": "PHONE_COUNTRY",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The two-character country code representing the country of which the phone_number is a part."
            },
            "display_phone_number": {
              "name": "display_phone_number",
              "Name": "DisplayPhoneNumber",
              "NAME": "DISPLAY_PHONE_NUMBER",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "A formatted version of the phone_number and phone_country pair, nicely formatted for display."
            },
            "obfuscated_channel_name": {
              "name": "obfuscated_channel_name",
              "Name": "ObfuscatedChannelName",
              "NAME": "OBFUSCATED_CHANNEL_NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Obfuscated slack channel name"
            },
            "workspace_name": {
              "name": "workspace_name",
              "Name": "WorkspaceName",
              "NAME": "WORKSPACE_NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The workspace name of the slack subscriber."
            },
            "quarantined_at": {
              "name": "quarantined_at",
              "Name": "QuarantinedAt",
              "NAME": "QUARANTINED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when the subscriber was quarantined due to an issue reaching them."
            },
            "purge_at": {
              "name": "purge_at",
              "Name": "PurgeAt",
              "NAME": "PURGE_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The timestamp when a quarantined subscriber will be purged (unsubscribed)."
            },
            "components": {
              "name": "components",
              "Name": "Components",
              "NAME": "COMPONENTS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The components for which the subscriber has elected to receive updates."
            },
            "page_access_user_id": {
              "name": "page_access_user_id",
              "Name": "PageAccessUserId",
              "NAME": "PAGE_ACCESS_USER_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "The Page Access user this subscriber belongs to (only for audience-specific pages)."
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident"
          ],
          "name": "subscriber",
          "Name": "Subscriber",
          "NAME": "SUBSCRIBER",
          "key$": "subscriber"
        },
        "resend_confirmation": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation",
                  "page_id": true,
                  "incident_id": true,
                  "subscriber_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "incident_id": {
                  "required": true,
                  "name": "incident_id",
                  "Name": "IncidentId",
                  "NAME": "INCIDENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "subscriber_id": {
                  "required": true,
                  "name": "subscriber_id",
                  "Name": "SubscriberId",
                  "NAME": "SUBSCRIBER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`reqdata`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "incident_id": "`$STRING`",
                  "subscriber_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "incident",
            "subscriber"
          ],
          "name": "resend_confirmation",
          "Name": "ResendConfirmation",
          "NAME": "RESEND_CONFIRMATION",
          "key$": "resend_confirmation"
        },
        "metric": {
          "alias": {
            "field": {
              "metric_id": "id",
              "id": "metric_id",
              "metrics_provider_id": "id"
            }
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/metrics",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics/{metric_id}",
                  "page_id": true,
                  "metric_id": true,
                  "metrics_provider_id": false
                },
                {
                  "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics",
                  "page_id": true,
                  "metrics_provider_id": true,
                  "metric_id": false
                },
                {
                  "path": "/pages/{page_id}/metrics",
                  "page_id": true,
                  "metric_id": false,
                  "metrics_provider_id": false
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metric_id": {
                  "required": true,
                  "name": "metric_id",
                  "Name": "MetricId",
                  "NAME": "METRIC_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metrics_provider_id": {
                  "required": true,
                  "name": "metrics_provider_id",
                  "Name": "MetricsProviderId",
                  "NAME": "METRICS_PROVIDER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "page": {
                  "required": false,
                  "name": "page",
                  "Name": "Page",
                  "NAME": "PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                },
                "per_page": {
                  "required": false,
                  "name": "per_page",
                  "Name": "PerPage",
                  "NAME": "PER_PAGE",
                  "type": "integer",
                  "Type": "Integer",
                  "TYPE": "INTEGER"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metrics_provider_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "remove": {
              "path": "/pages/{page_id}/metrics/{metric_id}/data",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics/{metric_id}",
                  "page_id": true,
                  "metric_id": true
                },
                {
                  "path": "/pages/{page_id}/metrics/{metric_id}/data",
                  "page_id": true,
                  "metric_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metric_id": {
                  "required": true,
                  "name": "metric_id",
                  "Name": "MetricId",
                  "NAME": "METRIC_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metric_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Metric identifier"
            },
            "metrics_provider_id": {
              "name": "metrics_provider_id",
              "Name": "MetricsProviderId",
              "NAME": "METRICS_PROVIDER_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Metric Provider identifier"
            },
            "metric_identifier": {
              "name": "metric_identifier",
              "Name": "MetricIdentifier",
              "NAME": "METRIC_IDENTIFIER",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Metric Display identifier used to look up the metric data from the provider"
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Name of metric"
            },
            "display": {
              "name": "display",
              "Name": "Display",
              "NAME": "DISPLAY",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Should the metric be displayed"
            },
            "tooltip_description": {
              "name": "tooltip_description",
              "Name": "TooltipDescription",
              "NAME": "TOOLTIP_DESCRIPTION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "backfilled": {
              "name": "backfilled",
              "Name": "Backfilled",
              "NAME": "BACKFILLED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN"
            },
            "y_axis_min": {
              "name": "y_axis_min",
              "Name": "YaxisMin",
              "NAME": "Y_AXIS_MIN",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER"
            },
            "y_axis_max": {
              "name": "y_axis_max",
              "Name": "YaxisMax",
              "NAME": "Y_AXIS_MAX",
              "type": "number",
              "Type": "Number",
              "TYPE": "NUMBER"
            },
            "y_axis_hidden": {
              "name": "y_axis_hidden",
              "Name": "YaxisHidden",
              "NAME": "Y_AXIS_HIDDEN",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN",
              "short": "Should the values on the y axis be hidden on render"
            },
            "suffix": {
              "name": "suffix",
              "Name": "Suffix",
              "NAME": "SUFFIX",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Suffix to describe the units on the graph"
            },
            "decimal_places": {
              "name": "decimal_places",
              "Name": "DecimalPlaces",
              "NAME": "DECIMAL_PLACES",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER"
            },
            "most_recent_data_at": {
              "name": "most_recent_data_at",
              "Name": "MostRecentDataAt",
              "NAME": "MOST_RECENT_DATA_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "last_fetched_at": {
              "name": "last_fetched_at",
              "Name": "LastFetchedAt",
              "NAME": "LAST_FETCHED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "backfill_percentage": {
              "name": "backfill_percentage",
              "Name": "BackfillPercentage",
              "NAME": "BACKFILL_PERCENTAGE",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER"
            },
            "reference_name": {
              "name": "reference_name",
              "Name": "ReferenceName",
              "NAME": "REFERENCE_NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "metric",
          "Name": "Metric",
          "NAME": "METRIC",
          "key$": "metric"
        },
        "post_pages_page_id_metrics_data": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/metrics/data",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics/data",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`reqdata`",
              "reqform": {
                "data": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_metrics_data",
          "Name": "PostPagesPageIdMetricsData",
          "NAME": "POST_PAGES_PAGE_ID_METRICS_DATA",
          "key$": "post_pages_page_id_metrics_data"
        },
        "patch_pages_page_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/metrics/{metric_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics/{metric_id}",
                  "page_id": true,
                  "metric_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metric_id": {
                  "required": true,
                  "name": "metric_id",
                  "Name": "MetricId",
                  "NAME": "METRIC_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metric_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_metric",
          "Name": "PatchPagesPageIdMetric",
          "NAME": "PATCH_PAGES_PAGE_ID_METRIC",
          "key$": "patch_pages_page_id_metric"
        },
        "put_pages_page_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/metrics/{metric_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics/{metric_id}",
                  "page_id": true,
                  "metric_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metric_id": {
                  "required": true,
                  "name": "metric_id",
                  "Name": "MetricId",
                  "NAME": "METRIC_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metric_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_metric",
          "Name": "PutPagesPageIdMetric",
          "NAME": "PUT_PAGES_PAGE_ID_METRIC",
          "key$": "put_pages_page_id_metric"
        },
        "post_pages_page_id_metrics_metric_id_data": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/metrics/{metric_id}/data",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics/{metric_id}/data",
                  "page_id": true,
                  "metric_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metric_id": {
                  "required": true,
                  "name": "metric_id",
                  "Name": "MetricId",
                  "NAME": "METRIC_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body.data`",
              "reqform": {
                "data": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metric_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "metric"
          ],
          "name": "post_pages_page_id_metrics_metric_id_data",
          "Name": "PostPagesPageIdMetricsMetricIdData",
          "NAME": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA",
          "key$": "post_pages_page_id_metrics_metric_id_data"
        },
        "post_pages_page_id_metrics_provider": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/metrics_providers",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics_providers",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metrics_provider": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_metrics_provider",
          "Name": "PostPagesPageIdMetricsProvider",
          "NAME": "POST_PAGES_PAGE_ID_METRICS_PROVIDER",
          "key$": "post_pages_page_id_metrics_provider"
        },
        "metrics_provider": {
          "alias": {
            "field": {
              "metrics_provider_id": "id",
              "id": "metrics_provider_id"
            }
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
                  "page_id": true,
                  "metrics_provider_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metrics_provider_id": {
                  "required": true,
                  "name": "metrics_provider_id",
                  "Name": "MetricsProviderId",
                  "NAME": "METRICS_PROVIDER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metrics_provider_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "remove": {
              "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
                  "page_id": true,
                  "metrics_provider_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metrics_provider_id": {
                  "required": true,
                  "name": "metrics_provider_id",
                  "Name": "MetricsProviderId",
                  "NAME": "METRICS_PROVIDER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metrics_provider_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Identifier for Metrics Provider"
            },
            "type": {
              "name": "type",
              "Name": "Type",
              "NAME": "TYPE",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "disabled": {
              "name": "disabled",
              "Name": "Disabled",
              "NAME": "DISABLED",
              "type": "boolean",
              "Type": "Boolean",
              "TYPE": "BOOLEAN"
            },
            "metric_base_uri": {
              "name": "metric_base_uri",
              "Name": "MetricBaseUri",
              "NAME": "METRIC_BASE_URI",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "last_revalidated_at": {
              "name": "last_revalidated_at",
              "Name": "LastRevalidatedAt",
              "NAME": "LAST_REVALIDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "metrics_provider",
          "Name": "MetricsProvider",
          "NAME": "METRICS_PROVIDER",
          "key$": "metrics_provider"
        },
        "patch_pages_page_id_metrics_provider": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
                  "page_id": true,
                  "metrics_provider_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metrics_provider_id": {
                  "required": true,
                  "name": "metrics_provider_id",
                  "Name": "MetricsProviderId",
                  "NAME": "METRICS_PROVIDER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metrics_provider": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metrics_provider_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_metrics_provider",
          "Name": "PatchPagesPageIdMetricsProvider",
          "NAME": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER",
          "key$": "patch_pages_page_id_metrics_provider"
        },
        "put_pages_page_id_metrics_provider": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}",
                  "page_id": true,
                  "metrics_provider_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metrics_provider_id": {
                  "required": true,
                  "name": "metrics_provider_id",
                  "Name": "MetricsProviderId",
                  "NAME": "METRICS_PROVIDER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metrics_provider": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metrics_provider_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_metrics_provider",
          "Name": "PutPagesPageIdMetricsProvider",
          "NAME": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER",
          "key$": "put_pages_page_id_metrics_provider"
        },
        "post_pages_page_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics",
                  "page_id": true,
                  "metrics_provider_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metrics_provider_id": {
                  "required": true,
                  "name": "metrics_provider_id",
                  "Name": "MetricsProviderId",
                  "NAME": "METRICS_PROVIDER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "metrics_provider_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "metrics_provider"
          ],
          "name": "post_pages_page_id_metric",
          "Name": "PostPagesPageIdMetric",
          "NAME": "POST_PAGES_PAGE_ID_METRIC",
          "key$": "post_pages_page_id_metric"
        },
        "post_pages_page_id_page_access_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/page_access_groups",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "page_access_group": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_page_access_group",
          "Name": "PostPagesPageIdPageAccessGroup",
          "NAME": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP",
          "key$": "post_pages_page_id_page_access_group"
        },
        "page_access_group": {
          "alias": {
            "field": {
              "page_access_group_id": "id",
              "id": "page_access_group_id"
            }
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "remove": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components/{component_id}",
                  "page_id": true,
                  "page_access_group_id": true,
                  "component_id": true
                },
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
                  "page_id": true,
                  "page_access_group_id": true,
                  "component_id": false
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`",
                  "component_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Page Access Group Identifier"
            },
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Page Identifier."
            },
            "name": {
              "name": "name",
              "Name": "Name",
              "NAME": "NAME",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Name for this Group."
            },
            "page_access_user_ids": {
              "name": "page_access_user_ids",
              "Name": "PageAccessUserIds",
              "NAME": "PAGE_ACCESS_USER_IDS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY"
            },
            "external_identifier": {
              "name": "external_identifier",
              "Name": "ExternalIdentifier",
              "NAME": "EXTERNAL_IDENTIFIER",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Associates group with external group."
            },
            "metric_ids": {
              "name": "metric_ids",
              "Name": "MetricIds",
              "NAME": "METRIC_IDS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY"
            },
            "component_ids": {
              "name": "component_ids",
              "Name": "ComponentIds",
              "NAME": "COMPONENT_IDS",
              "type": "array",
              "Type": "Array",
              "TYPE": "ARRAY"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "page_access_group",
          "Name": "PageAccessGroup",
          "NAME": "PAGE_ACCESS_GROUP",
          "key$": "page_access_group"
        },
        "patch_pages_page_id_page_access_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "page_access_group": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_page_access_group",
          "Name": "PatchPagesPageIdPageAccessGroup",
          "NAME": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP",
          "key$": "patch_pages_page_id_page_access_group"
        },
        "put_pages_page_id_page_access_group": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "page_access_group": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_page_access_group",
          "Name": "PutPagesPageIdPageAccessGroup",
          "NAME": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP",
          "key$": "put_pages_page_id_page_access_group"
        },
        "patch_pages_page_id_page_access_groups_page_access_group_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_group"
          ],
          "name": "patch_pages_page_id_page_access_groups_page_access_group_id_component",
          "Name": "PatchPagesPageIdPageAccessGroupsPageAccessGroupIdComponent",
          "NAME": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT",
          "key$": "patch_pages_page_id_page_access_groups_page_access_group_id_component"
        },
        "put_pages_page_id_page_access_groups_page_access_group_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_group"
          ],
          "name": "put_pages_page_id_page_access_groups_page_access_group_id_component",
          "Name": "PutPagesPageIdPageAccessGroupsPageAccessGroupIdComponent",
          "NAME": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT",
          "key$": "put_pages_page_id_page_access_groups_page_access_group_id_component"
        },
        "post_pages_page_id_page_access_groups_page_access_group_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_group"
          ],
          "name": "post_pages_page_id_page_access_groups_page_access_group_id_component",
          "Name": "PostPagesPageIdPageAccessGroupsPageAccessGroupIdComponent",
          "NAME": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT",
          "key$": "post_pages_page_id_page_access_groups_page_access_group_id_component"
        },
        "delete_pages_page_id_page_access_groups_page_access_group_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "remove": {
              "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_groups/{page_access_group_id}/components",
                  "page_id": true,
                  "page_access_group_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_group_id": {
                  "required": true,
                  "name": "page_access_group_id",
                  "Name": "PageAccessGroupId",
                  "NAME": "PAGE_ACCESS_GROUP_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_group_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_group"
          ],
          "name": "delete_pages_page_id_page_access_groups_page_access_group_id_component",
          "Name": "DeletePagesPageIdPageAccessGroupsPageAccessGroupIdComponent",
          "NAME": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT",
          "key$": "delete_pages_page_id_page_access_groups_page_access_group_id_component"
        },
        "post_pages_page_id_page_access_user": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/page_access_users",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "page_access_user": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_page_access_user",
          "Name": "PostPagesPageIdPageAccessUser",
          "NAME": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER",
          "key$": "post_pages_page_id_page_access_user"
        },
        "page_access_user": {
          "alias": {
            "field": {
              "page_access_user_id": "id",
              "id": "page_access_user_id"
            }
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            },
            "load": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            },
            "remove": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components/{component_id}",
                  "page_id": true,
                  "page_access_user_id": true,
                  "component_id": true,
                  "metric_id": false
                },
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id}",
                  "page_id": true,
                  "page_access_user_id": true,
                  "metric_id": true,
                  "component_id": false
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "component_id": {
                  "required": true,
                  "name": "component_id",
                  "Name": "ComponentId",
                  "NAME": "COMPONENT_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "metric_id": {
                  "required": true,
                  "name": "metric_id",
                  "Name": "MetricId",
                  "NAME": "METRIC_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`",
                  "metric_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {
            "id": {
              "name": "id",
              "Name": "Id",
              "NAME": "ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Page Access User Identifier"
            },
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "email": {
              "name": "email",
              "Name": "Email",
              "NAME": "EMAIL",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "external_login": {
              "name": "external_login",
              "Name": "ExternalLogin",
              "NAME": "EXTERNAL_LOGIN",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "IDP login user id. Key is typically \"uid\"."
            },
            "page_access_group_id": {
              "name": "page_access_group_id",
              "Name": "PageAccessGroupId",
              "NAME": "PAGE_ACCESS_GROUP_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "page_access_group_ids": {
              "name": "page_access_group_ids",
              "Name": "PageAccessGroupIds",
              "NAME": "PAGE_ACCESS_GROUP_IDS",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "created_at": {
              "name": "created_at",
              "Name": "CreatedAt",
              "NAME": "CREATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            },
            "updated_at": {
              "name": "updated_at",
              "Name": "UpdatedAt",
              "NAME": "UPDATED_AT",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "page_access_user",
          "Name": "PageAccessUser",
          "NAME": "PAGE_ACCESS_USER",
          "key$": "page_access_user"
        },
        "patch_pages_page_id_page_access_users_page_access_user_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "patch_pages_page_id_page_access_users_page_access_user_id_component",
          "Name": "PatchPagesPageIdPageAccessUsersPageAccessUserIdComponent",
          "NAME": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT",
          "key$": "patch_pages_page_id_page_access_users_page_access_user_id_component"
        },
        "put_pages_page_id_page_access_users_page_access_user_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "put_pages_page_id_page_access_users_page_access_user_id_component",
          "Name": "PutPagesPageIdPageAccessUsersPageAccessUserIdComponent",
          "NAME": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT",
          "key$": "put_pages_page_id_page_access_users_page_access_user_id_component"
        },
        "post_pages_page_id_page_access_users_page_access_user_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "post_pages_page_id_page_access_users_page_access_user_id_component",
          "Name": "PostPagesPageIdPageAccessUsersPageAccessUserIdComponent",
          "NAME": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT",
          "key$": "post_pages_page_id_page_access_users_page_access_user_id_component"
        },
        "delete_pages_page_id_page_access_users_page_access_user_id_component": {
          "alias": {
            "field": {}
          },
          "op": {
            "remove": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/components",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "delete_pages_page_id_page_access_users_page_access_user_id_component",
          "Name": "DeletePagesPageIdPageAccessUsersPageAccessUserIdComponent",
          "NAME": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT",
          "key$": "delete_pages_page_id_page_access_users_page_access_user_id_component"
        },
        "patch_pages_page_id_page_access_users_page_access_user_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "patch_pages_page_id_page_access_users_page_access_user_id_metric",
          "Name": "PatchPagesPageIdPageAccessUsersPageAccessUserIdMetric",
          "NAME": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC",
          "key$": "patch_pages_page_id_page_access_users_page_access_user_id_metric"
        },
        "put_pages_page_id_page_access_users_page_access_user_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "put_pages_page_id_page_access_users_page_access_user_id_metric",
          "Name": "PutPagesPageIdPageAccessUsersPageAccessUserIdMetric",
          "NAME": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC",
          "key$": "put_pages_page_id_page_access_users_page_access_user_id_metric"
        },
        "post_pages_page_id_page_access_users_page_access_user_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "post_pages_page_id_page_access_users_page_access_user_id_metric",
          "Name": "PostPagesPageIdPageAccessUsersPageAccessUserIdMetric",
          "NAME": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC",
          "key$": "post_pages_page_id_page_access_users_page_access_user_id_metric"
        },
        "delete_pages_page_id_page_access_users_page_access_user_id_metric": {
          "alias": {
            "field": {}
          },
          "op": {
            "remove": {
              "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/page_access_users/{page_access_user_id}/metrics",
                  "page_id": true,
                  "page_access_user_id": true
                }
              ],
              "method": "delete",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "page_access_user_id": {
                  "required": true,
                  "name": "page_access_user_id",
                  "Name": "PageAccessUserId",
                  "NAME": "PAGE_ACCESS_USER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "metric_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "page_access_user_id": "`$STRING`"
                }
              },
              "name": "remove",
              "Name": "Remove",
              "NAME": "REMOVE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page",
            "page_access_user"
          ],
          "name": "delete_pages_page_id_page_access_users_page_access_user_id_metric",
          "Name": "DeletePagesPageIdPageAccessUsersPageAccessUserIdMetric",
          "NAME": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC",
          "key$": "delete_pages_page_id_page_access_users_page_access_user_id_metric"
        },
        "status_embed_config": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/status_embed_config",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/status_embed_config",
                  "page_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "page_id": {
              "name": "page_id",
              "Name": "PageId",
              "NAME": "PAGE_ID",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Page identifier"
            },
            "position": {
              "name": "position",
              "Name": "Position",
              "NAME": "POSITION",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Corner where status embed iframe will appear on page"
            },
            "incident_background_color": {
              "name": "incident_background_color",
              "Name": "IncidentBackgroundColor",
              "NAME": "INCIDENT_BACKGROUND_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Color of status embed iframe background when displaying incident"
            },
            "incident_text_color": {
              "name": "incident_text_color",
              "Name": "IncidentTextColor",
              "NAME": "INCIDENT_TEXT_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Color of status embed iframe text when displaying incident"
            },
            "maintenance_background_color": {
              "name": "maintenance_background_color",
              "Name": "MaintenanceBackgroundColor",
              "NAME": "MAINTENANCE_BACKGROUND_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Color of status embed iframe background when displaying maintenance"
            },
            "maintenance_text_color": {
              "name": "maintenance_text_color",
              "Name": "MaintenanceTextColor",
              "NAME": "MAINTENANCE_TEXT_COLOR",
              "type": "string",
              "Type": "String",
              "TYPE": "STRING",
              "short": "Color of status embed iframe text when displaying maintenance"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "status_embed_config",
          "Name": "StatusEmbedConfig",
          "NAME": "STATUS_EMBED_CONFIG",
          "key$": "status_embed_config"
        },
        "patch_pages_page_id_status_embed_config": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/status_embed_config",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/status_embed_config",
                  "page_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "status_embed_config": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_status_embed_config",
          "Name": "PatchPagesPageIdStatusEmbedConfig",
          "NAME": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG",
          "key$": "patch_pages_page_id_status_embed_config"
        },
        "put_pages_page_id_status_embed_config": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/status_embed_config",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/status_embed_config",
                  "page_id": true
                }
              ],
              "method": "put",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "status_embed_config": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "put_pages_page_id_status_embed_config",
          "Name": "PutPagesPageIdStatusEmbedConfig",
          "NAME": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG",
          "key$": "put_pages_page_id_status_embed_config"
        },
        "post_pages_page_id_subscriber": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/subscribers",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "subscriber": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_subscriber",
          "Name": "PostPagesPageIdSubscriber",
          "NAME": "POST_PAGES_PAGE_ID_SUBSCRIBER",
          "key$": "post_pages_page_id_subscriber"
        },
        "subscriber_count": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/subscribers/count",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/count",
                  "page_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {
                "type": {
                  "required": false,
                  "name": "type",
                  "Name": "Type",
                  "NAME": "TYPE",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "state": {
                  "required": false,
                  "name": "state",
                  "Name": "State",
                  "NAME": "STATE",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "email": {
              "name": "email",
              "Name": "Email",
              "NAME": "EMAIL",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The number of Email subscribers found by the query."
            },
            "sms": {
              "name": "sms",
              "Name": "Sms",
              "NAME": "SMS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The number of Webhook subscribers found by the query."
            },
            "webhook": {
              "name": "webhook",
              "Name": "Webhook",
              "NAME": "WEBHOOK",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The number of SMS subscribers found by the query."
            },
            "integration_partner": {
              "name": "integration_partner",
              "Name": "IntegrationPartner",
              "NAME": "INTEGRATION_PARTNER",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The number of integration partners found by the query."
            },
            "slack": {
              "name": "slack",
              "Name": "Slack",
              "NAME": "SLACK",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The number of Slack subscribers found by the query."
            },
            "teams": {
              "name": "teams",
              "Name": "Teams",
              "NAME": "TEAMS",
              "type": "integer",
              "Type": "Integer",
              "TYPE": "INTEGER",
              "short": "The number of MS teams subscribers found by the query."
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "subscriber_count",
          "Name": "SubscriberCount",
          "NAME": "SUBSCRIBER_COUNT",
          "key$": "subscriber_count"
        },
        "subscriber_count_by_type_and_state": {
          "alias": {
            "field": {}
          },
          "op": {
            "load": {
              "path": "/pages/{page_id}/subscribers/histogram_by_state",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/histogram_by_state",
                  "page_id": true
                }
              ],
              "method": "get",
              "kind": "res",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": "`body`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "load",
              "Name": "Load",
              "NAME": "LOAD"
            }
          },
          "field": {
            "email": {
              "name": "email",
              "Name": "Email",
              "NAME": "EMAIL",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            },
            "sms": {
              "name": "sms",
              "Name": "Sms",
              "NAME": "SMS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            },
            "webhook": {
              "name": "webhook",
              "Name": "Webhook",
              "NAME": "WEBHOOK",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            },
            "integration_partner": {
              "name": "integration_partner",
              "Name": "IntegrationPartner",
              "NAME": "INTEGRATION_PARTNER",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            },
            "slack": {
              "name": "slack",
              "Name": "Slack",
              "NAME": "SLACK",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            },
            "teams": {
              "name": "teams",
              "Name": "Teams",
              "NAME": "TEAMS",
              "type": "object",
              "Type": "Object",
              "TYPE": "OBJECT"
            }
          },
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "subscriber_count_by_type_and_state",
          "Name": "SubscriberCountByTypeAndState",
          "NAME": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE",
          "key$": "subscriber_count_by_type_and_state"
        },
        "post_pages_page_id_subscribers_reactivate": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/subscribers/reactivate",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/reactivate",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`reqdata`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_subscribers_reactivate",
          "Name": "PostPagesPageIdSubscribersReactivate",
          "NAME": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE",
          "key$": "post_pages_page_id_subscribers_reactivate"
        },
        "post_pages_page_id_subscribers_resend_confirmation": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/subscribers/resend_confirmation",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/resend_confirmation",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`reqdata`",
              "reqform": {
                "subscribers": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_subscribers_resend_confirmation",
          "Name": "PostPagesPageIdSubscribersResendConfirmation",
          "NAME": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION",
          "key$": "post_pages_page_id_subscribers_resend_confirmation"
        },
        "post_pages_page_id_subscribers_unsubscribe": {
          "alias": {
            "field": {}
          },
          "op": {
            "create": {
              "path": "/pages/{page_id}/subscribers/unsubscribe",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/unsubscribe",
                  "page_id": true
                }
              ],
              "method": "post",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`reqdata`",
              "reqform": "`reqdata`",
              "validate": {
                "params": {
                  "page_id": "`$STRING`"
                }
              },
              "name": "create",
              "Name": "Create",
              "NAME": "CREATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "post_pages_page_id_subscribers_unsubscribe",
          "Name": "PostPagesPageIdSubscribersUnsubscribe",
          "NAME": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE",
          "key$": "post_pages_page_id_subscribers_unsubscribe"
        },
        "patch_pages_page_id_subscriber": {
          "alias": {
            "field": {}
          },
          "op": {
            "update": {
              "path": "/pages/{page_id}/subscribers/{subscriber_id}",
              "pathalt": [
                {
                  "path": "/pages/{page_id}/subscribers/{subscriber_id}",
                  "page_id": true,
                  "subscriber_id": true
                }
              ],
              "method": "patch",
              "kind": "req",
              "param": {
                "page_id": {
                  "required": true,
                  "name": "page_id",
                  "Name": "PageId",
                  "NAME": "PAGE_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                },
                "subscriber_id": {
                  "required": true,
                  "name": "subscriber_id",
                  "Name": "SubscriberId",
                  "NAME": "SUBSCRIBER_ID",
                  "type": "string",
                  "Type": "String",
                  "TYPE": "STRING"
                }
              },
              "query": {},
              "resform": "`body`",
              "reqform": {
                "component_ids": "`reqdata`"
              },
              "validate": {
                "params": {
                  "page_id": "`$STRING`",
                  "subscriber_id": "`$STRING`"
                }
              },
              "name": "update",
              "Name": "Update",
              "NAME": "UPDATE"
            }
          },
          "field": {},
          "cmd": {},
          "id": {
            "name": "id",
            "field": "id"
          },
          "ancestors": [
            "page"
          ],
          "name": "patch_pages_page_id_subscriber",
          "Name": "PatchPagesPageIdSubscriber",
          "NAME": "PATCH_PAGES_PAGE_ID_SUBSCRIBER",
          "key$": "patch_pages_page_id_subscriber"
        }
      }
    },
    "def": {
      "info": {
        "title": "Statuspage API",
        "description": "# Code of Conduct\nPlease don't abuse the API, and please report all feature requests and issues to\nhttps://support.atlassian.com/contact\n\n# Rate Limiting\nEach API token is limited to 1 request / second as measured on a 60 second rolling window.\nTo get this limit increased, please contact us at https://support.atlassian.com/contact\n\nError codes 420 or 429 indicate that you have exceeded the rate limit and the request has been rejected.\n\n# Basics\n\n## HTTPS\nIt's required\n\n## URL Prefix\nIn order to maintain version integrity into the future, the API is versioned. All calls\ncurrently begin with the following prefix:\n\n  https://api.statuspage.io/v1/\n\n## RESTful Interface\nWherever possible, the API seeks to implement repeatable patterns with logical,\nrepresentative URLs and descriptive HTTP verbs. Below are some examples and conventions\nyou will see throughout the documentation.\n\n* Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json\n* Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json\n* GET will retrieve information about a collection/element\n* POST will create an element in a collection\n* PATCH will update a single element\n* PUT will replace a single element in a collection (rarely used)\n* DELETE will destroy a single element\n\n## Sending Data\nInformation can be sent in the body as form urlencoded or JSON, but make sure the\nContent-Type header matches the body structure or the server gremlins will be angry.\n\nAll examples are provided in JSON format, however they can easily be converted to form encoding\nif required.  Some examples of how to convert things are below:\n\n    // JSON\n    {\n      \"incident\": {\n        \"name\": \"test incident\",\n        \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]\n      }\n    }\n\n    // Form Encoded (using curl as an example):\n    curl -X POST https://api.statuspage.io/v1/example \\\n      -d \"incident[name]=test incident\" \\\n      -d \"incident[components][]=8kbf7d35c070\" \\\n      -d \"incident[components][]=vtnh60py4yd7\"\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
        "contact": {
          "name": "Statuspage Support",
          "url": "https://support.atlassian.com/contact"
        },
        "version": "1.0.0",
        "x-logo": {
          "url": "https://d1ykxpo828xni0.cloudfront.net/Statuspage-logo-padding.svg"
        }
      },
      "servers": [
        {
          "url": "https://api.statuspage.io/v1"
        }
      ]
    },
    "sdk": {
      "flow": {
        "BasicPutOrganizationsOrganizationIdPermissionFlow": {
          "name": "BasicPutOrganizationsOrganizationIdPermissionFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION_ENTID": {
              "put_organizations_organization_id_permission01": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION01",
              "put_organizations_organization_id_permission02": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION02",
              "put_organizations_organization_id_permission03": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_organizations_organization_id_permission": {
                "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION01": {
                  "id": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION01"
                },
                "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION02": {
                  "id": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION02"
                },
                "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION03": {
                  "id": "PUT_ORGANIZATIONS_ORGANIZATION_ID_PERMISSION03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPermissionFlow": {
          "name": "BasicPermissionFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PERMISSION_ENTID": {
              "permission01": "PERMISSION01",
              "permission02": "PERMISSION02",
              "permission03": "PERMISSION03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_USER_ENTID": {
              "user01": "USER01"
            }
          },
          "test": {
            "entity": {
              "permission": {
                "PERMISSION01": {
                  "data": {},
                  "id": "PERMISSION01",
                  "user_id": "USER01"
                },
                "PERMISSION02": {
                  "data": {},
                  "id": "PERMISSION02"
                },
                "PERMISSION03": {
                  "data": {},
                  "id": "PERMISSION03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_permission0",
              "kind": "entity",
              "entity": "permission",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_PERMISSION_ENTID.permission01`",
                "user_id": "`dm$=p.STATUSPAGE_TEST_USER_ENTID.user01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_permission0.match.id`",
                "user_id": "`dm$=p.STATUSPAGE_TEST_USER_ENTID.user01`"
              }
            }
          ]
        },
        "BasicPostOrganizationsOrganizationIdUserFlow": {
          "name": "BasicPostOrganizationsOrganizationIdUserFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_ORGANIZATIONS_ORGANIZATION_ID_USER_ENTID": {
              "post_organizations_organization_id_user01": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER01",
              "post_organizations_organization_id_user02": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER02",
              "post_organizations_organization_id_user03": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_organizations_organization_id_user": {
                "POST_ORGANIZATIONS_ORGANIZATION_ID_USER01": {
                  "id": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER01"
                },
                "POST_ORGANIZATIONS_ORGANIZATION_ID_USER02": {
                  "id": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER02"
                },
                "POST_ORGANIZATIONS_ORGANIZATION_ID_USER03": {
                  "id": "POST_ORGANIZATIONS_ORGANIZATION_ID_USER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicErrorEntityFlow": {
          "name": "BasicErrorEntityFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_ERROR_ENTITY_ENTID": {
              "error_entity01": "ERROR_ENTITY01",
              "error_entity02": "ERROR_ENTITY02",
              "error_entity03": "ERROR_ENTITY03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "error_entity": {
                "ERROR_ENTITY01": {
                  "id": "ERROR_ENTITY01"
                },
                "ERROR_ENTITY02": {
                  "id": "ERROR_ENTITY02"
                },
                "ERROR_ENTITY03": {
                  "id": "ERROR_ENTITY03"
                }
              }
            }
          },
          "step": []
        },
        "BasicUserFlow": {
          "name": "BasicUserFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_USER_ENTID": {
              "user01": "USER01",
              "user02": "USER02",
              "user03": "USER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "user": {
                "USER01": {
                  "id": "USER01"
                },
                "USER02": {
                  "id": "USER02"
                },
                "USER03": {
                  "id": "USER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPageFlow": {
          "name": "BasicPatchPageFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGE_ENTID": {
              "patch_page01": "PATCH_PAGE01",
              "patch_page02": "PATCH_PAGE02",
              "patch_page03": "PATCH_PAGE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_page": {
                "PATCH_PAGE01": {
                  "id": "PATCH_PAGE01"
                },
                "PATCH_PAGE02": {
                  "id": "PATCH_PAGE02"
                },
                "PATCH_PAGE03": {
                  "id": "PATCH_PAGE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPageFlow": {
          "name": "BasicPutPageFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGE_ENTID": {
              "put_page01": "PUT_PAGE01",
              "put_page02": "PUT_PAGE02",
              "put_page03": "PUT_PAGE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_page": {
                "PUT_PAGE01": {
                  "id": "PUT_PAGE01"
                },
                "PUT_PAGE02": {
                  "id": "PUT_PAGE02"
                },
                "PUT_PAGE03": {
                  "id": "PUT_PAGE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPageFlow": {
          "name": "BasicPageFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01",
              "page02": "PAGE02",
              "page03": "PAGE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "page": {
                "PAGE01": {
                  "id": "PAGE01",
                  "created_at": "s1",
                  "updated_at": "s2",
                  "name": "s3",
                  "page_description": "s4",
                  "headline": "s5",
                  "branding": "s6",
                  "subdomain": "s7",
                  "domain": "s8",
                  "url": "s9",
                  "support_url": "sa",
                  "hidden_from_search": false,
                  "allow_page_subscribers": true,
                  "allow_incident_subscribers": false,
                  "allow_email_subscribers": true,
                  "allow_sms_subscribers": false,
                  "allow_rss_atom_feeds": true,
                  "allow_webhook_subscribers": false,
                  "notifications_from_email": "s12",
                  "notifications_email_footer": "s13",
                  "activity_score": 20,
                  "twitter_username": "s15",
                  "viewers_must_be_team_members": true,
                  "ip_restrictions": "s17",
                  "city": "s18",
                  "state": "s19",
                  "country": "s1a",
                  "time_zone": "s1b",
                  "css_body_background_color": "s1c",
                  "css_font_color": "s1d",
                  "css_light_font_color": "s1e",
                  "css_greens": "s1f",
                  "css_yellows": "s20",
                  "css_oranges": "s21",
                  "css_blues": "s22",
                  "css_reds": "s23",
                  "css_border_color": "s24",
                  "css_graph_color": "s25",
                  "css_link_color": "s26",
                  "css_no_data": "s27",
                  "favicon_logo": "s28",
                  "transactional_logo": "s29",
                  "hero_cover": "s2a",
                  "email_logo": "s2b",
                  "twitter_logo": "s2c"
                },
                "PAGE02": {
                  "id": "PAGE02",
                  "created_at": "s1c3",
                  "updated_at": "s1c4",
                  "name": "s1c5",
                  "page_description": "s1c6",
                  "headline": "s1c7",
                  "branding": "s1c8",
                  "subdomain": "s1c9",
                  "domain": "s1ca",
                  "url": "s1cb",
                  "support_url": "s1cc",
                  "hidden_from_search": false,
                  "allow_page_subscribers": true,
                  "allow_incident_subscribers": false,
                  "allow_email_subscribers": true,
                  "allow_sms_subscribers": false,
                  "allow_rss_atom_feeds": true,
                  "allow_webhook_subscribers": false,
                  "notifications_from_email": "s1d4",
                  "notifications_email_footer": "s1d5",
                  "activity_score": 470,
                  "twitter_username": "s1d7",
                  "viewers_must_be_team_members": true,
                  "ip_restrictions": "s1d9",
                  "city": "s1da",
                  "state": "s1db",
                  "country": "s1dc",
                  "time_zone": "s1dd",
                  "css_body_background_color": "s1de",
                  "css_font_color": "s1df",
                  "css_light_font_color": "s1e0",
                  "css_greens": "s1e1",
                  "css_yellows": "s1e2",
                  "css_oranges": "s1e3",
                  "css_blues": "s1e4",
                  "css_reds": "s1e5",
                  "css_border_color": "s1e6",
                  "css_graph_color": "s1e7",
                  "css_link_color": "s1e8",
                  "css_no_data": "s1e9",
                  "favicon_logo": "s1ea",
                  "transactional_logo": "s1eb",
                  "hero_cover": "s1ec",
                  "email_logo": "s1ed",
                  "twitter_logo": "s1ee"
                },
                "PAGE03": {
                  "id": "PAGE03",
                  "created_at": "s385",
                  "updated_at": "s386",
                  "name": "s387",
                  "page_description": "s388",
                  "headline": "s389",
                  "branding": "s38a",
                  "subdomain": "s38b",
                  "domain": "s38c",
                  "url": "s38d",
                  "support_url": "s38e",
                  "hidden_from_search": false,
                  "allow_page_subscribers": true,
                  "allow_incident_subscribers": false,
                  "allow_email_subscribers": true,
                  "allow_sms_subscribers": false,
                  "allow_rss_atom_feeds": true,
                  "allow_webhook_subscribers": false,
                  "notifications_from_email": "s396",
                  "notifications_email_footer": "s397",
                  "activity_score": 920,
                  "twitter_username": "s399",
                  "viewers_must_be_team_members": true,
                  "ip_restrictions": "s39b",
                  "city": "s39c",
                  "state": "s39d",
                  "country": "s39e",
                  "time_zone": "s39f",
                  "css_body_background_color": "s3a0",
                  "css_font_color": "s3a1",
                  "css_light_font_color": "s3a2",
                  "css_greens": "s3a3",
                  "css_yellows": "s3a4",
                  "css_oranges": "s3a5",
                  "css_blues": "s3a6",
                  "css_reds": "s3a7",
                  "css_border_color": "s3a8",
                  "css_graph_color": "s3a9",
                  "css_link_color": "s3aa",
                  "css_no_data": "s3ab",
                  "favicon_logo": "s3ac",
                  "transactional_logo": "s3ad",
                  "hero_cover": "s3ae",
                  "email_logo": "s3af",
                  "twitter_logo": "s3b0"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_page0",
              "kind": "entity",
              "entity": "page",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_page0.match.id`"
              }
            }
          ]
        },
        "BasicPostPagesPageIdComponentGroupFlow": {
          "name": "BasicPostPagesPageIdComponentGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_COMPONENT_GROUP_ENTID": {
              "post_pages_page_id_component_group01": "POST_PAGES_PAGE_ID_COMPONENT_GROUP01",
              "post_pages_page_id_component_group02": "POST_PAGES_PAGE_ID_COMPONENT_GROUP02",
              "post_pages_page_id_component_group03": "POST_PAGES_PAGE_ID_COMPONENT_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_component_group": {
                "POST_PAGES_PAGE_ID_COMPONENT_GROUP01": {
                  "id": "POST_PAGES_PAGE_ID_COMPONENT_GROUP01"
                },
                "POST_PAGES_PAGE_ID_COMPONENT_GROUP02": {
                  "id": "POST_PAGES_PAGE_ID_COMPONENT_GROUP02"
                },
                "POST_PAGES_PAGE_ID_COMPONENT_GROUP03": {
                  "id": "POST_PAGES_PAGE_ID_COMPONENT_GROUP03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdComponentGroupFlow": {
          "name": "BasicPatchPagesPageIdComponentGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_COMPONENT_GROUP_ENTID": {
              "patch_pages_page_id_component_group01": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP01",
              "patch_pages_page_id_component_group02": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP02",
              "patch_pages_page_id_component_group03": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_component_group": {
                "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP01": {
                  "id": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP01"
                },
                "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP02": {
                  "id": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP02"
                },
                "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP03": {
                  "id": "PATCH_PAGES_PAGE_ID_COMPONENT_GROUP03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdComponentGroupFlow": {
          "name": "BasicPutPagesPageIdComponentGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_COMPONENT_GROUP_ENTID": {
              "put_pages_page_id_component_group01": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP01",
              "put_pages_page_id_component_group02": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP02",
              "put_pages_page_id_component_group03": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_component_group": {
                "PUT_PAGES_PAGE_ID_COMPONENT_GROUP01": {
                  "id": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP01"
                },
                "PUT_PAGES_PAGE_ID_COMPONENT_GROUP02": {
                  "id": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP02"
                },
                "PUT_PAGES_PAGE_ID_COMPONENT_GROUP03": {
                  "id": "PUT_PAGES_PAGE_ID_COMPONENT_GROUP03"
                }
              }
            }
          },
          "step": []
        },
        "BasicGroupComponentFlow": {
          "name": "BasicGroupComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_GROUP_COMPONENT_ENTID": {
              "group_component01": "GROUP_COMPONENT01",
              "group_component02": "GROUP_COMPONENT02",
              "group_component03": "GROUP_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "group_component": {
                "GROUP_COMPONENT01": {
                  "id": "GROUP_COMPONENT01",
                  "page_id": "PAGE01",
                  "name": "s2",
                  "description": "s3",
                  "components": "s4",
                  "position": "s5",
                  "created_at": "s6",
                  "updated_at": "s7"
                },
                "GROUP_COMPONENT02": {
                  "id": "GROUP_COMPONENT02",
                  "page_id": "s51",
                  "name": "s52",
                  "description": "s53",
                  "components": "s54",
                  "position": "s55",
                  "created_at": "s56",
                  "updated_at": "s57"
                },
                "GROUP_COMPONENT03": {
                  "id": "GROUP_COMPONENT03",
                  "page_id": "sa1",
                  "name": "sa2",
                  "description": "sa3",
                  "components": "sa4",
                  "position": "sa5",
                  "created_at": "sa6",
                  "updated_at": "sa7"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_group_component0",
              "kind": "entity",
              "entity": "group_component",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_GROUP_COMPONENT_ENTID.group_component01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_group_component0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicComponentGroupUptimeFlow": {
          "name": "BasicComponentGroupUptimeFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_COMPONENT_GROUP_UPTIME_ENTID": {
              "component_group_uptime01": "COMPONENT_GROUP_UPTIME01",
              "component_group_uptime02": "COMPONENT_GROUP_UPTIME02",
              "component_group_uptime03": "COMPONENT_GROUP_UPTIME03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "component_group_uptime": {
                "COMPONENT_GROUP_UPTIME01": {
                  "range_start": "s0",
                  "range_end": "s1",
                  "uptime_percentage": 2,
                  "major_outage": "s3",
                  "partial_outage": "s4",
                  "warnings": "s5",
                  "id": "COMPONENT_GROUP_UPTIME01",
                  "name": "s7",
                  "related_events": {},
                  "page_id": "PAGE01"
                },
                "COMPONENT_GROUP_UPTIME02": {
                  "range_start": "s5a",
                  "range_end": "s5b",
                  "uptime_percentage": 92,
                  "major_outage": "s5d",
                  "partial_outage": "s5e",
                  "warnings": "s5f",
                  "id": "COMPONENT_GROUP_UPTIME02",
                  "name": "s61",
                  "related_events": {}
                },
                "COMPONENT_GROUP_UPTIME03": {
                  "range_start": "sb4",
                  "range_end": "sb5",
                  "uptime_percentage": 182,
                  "major_outage": "sb7",
                  "partial_outage": "sb8",
                  "warnings": "sb9",
                  "id": "COMPONENT_GROUP_UPTIME03",
                  "name": "sbb",
                  "related_events": {}
                }
              }
            }
          },
          "step": [
            {
              "name": "load_component_group_uptime0",
              "kind": "entity",
              "entity": "component_group_uptime",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_COMPONENT_GROUP_UPTIME_ENTID.component_group_uptime01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_component_group_uptime0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicPostPagesPageIdComponentFlow": {
          "name": "BasicPostPagesPageIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_COMPONENT_ENTID": {
              "post_pages_page_id_component01": "POST_PAGES_PAGE_ID_COMPONENT01",
              "post_pages_page_id_component02": "POST_PAGES_PAGE_ID_COMPONENT02",
              "post_pages_page_id_component03": "POST_PAGES_PAGE_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_component": {
                "POST_PAGES_PAGE_ID_COMPONENT01": {
                  "id": "POST_PAGES_PAGE_ID_COMPONENT01"
                },
                "POST_PAGES_PAGE_ID_COMPONENT02": {
                  "id": "POST_PAGES_PAGE_ID_COMPONENT02"
                },
                "POST_PAGES_PAGE_ID_COMPONENT03": {
                  "id": "POST_PAGES_PAGE_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdComponentFlow": {
          "name": "BasicPatchPagesPageIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_COMPONENT_ENTID": {
              "patch_pages_page_id_component01": "PATCH_PAGES_PAGE_ID_COMPONENT01",
              "patch_pages_page_id_component02": "PATCH_PAGES_PAGE_ID_COMPONENT02",
              "patch_pages_page_id_component03": "PATCH_PAGES_PAGE_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_component": {
                "PATCH_PAGES_PAGE_ID_COMPONENT01": {
                  "id": "PATCH_PAGES_PAGE_ID_COMPONENT01"
                },
                "PATCH_PAGES_PAGE_ID_COMPONENT02": {
                  "id": "PATCH_PAGES_PAGE_ID_COMPONENT02"
                },
                "PATCH_PAGES_PAGE_ID_COMPONENT03": {
                  "id": "PATCH_PAGES_PAGE_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdComponentFlow": {
          "name": "BasicPutPagesPageIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_COMPONENT_ENTID": {
              "put_pages_page_id_component01": "PUT_PAGES_PAGE_ID_COMPONENT01",
              "put_pages_page_id_component02": "PUT_PAGES_PAGE_ID_COMPONENT02",
              "put_pages_page_id_component03": "PUT_PAGES_PAGE_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_component": {
                "PUT_PAGES_PAGE_ID_COMPONENT01": {
                  "id": "PUT_PAGES_PAGE_ID_COMPONENT01"
                },
                "PUT_PAGES_PAGE_ID_COMPONENT02": {
                  "id": "PUT_PAGES_PAGE_ID_COMPONENT02"
                },
                "PUT_PAGES_PAGE_ID_COMPONENT03": {
                  "id": "PUT_PAGES_PAGE_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicComponentFlow": {
          "name": "BasicComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_COMPONENT_ENTID": {
              "component01": "COMPONENT01",
              "component02": "COMPONENT02",
              "component03": "COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "component": {
                "COMPONENT01": {
                  "id": "COMPONENT01",
                  "page_id": "PAGE01",
                  "group_id": "s2",
                  "created_at": "s3",
                  "updated_at": "s4",
                  "group": false,
                  "name": "s6",
                  "description": "s7",
                  "position": "s8",
                  "status": "s9",
                  "showcase": true,
                  "only_show_if_degraded": false,
                  "automation_email": "sc",
                  "start_date": "sd"
                },
                "COMPONENT02": {
                  "id": "COMPONENT02",
                  "page_id": "s8d",
                  "group_id": "s8e",
                  "created_at": "s8f",
                  "updated_at": "s90",
                  "group": false,
                  "name": "s92",
                  "description": "s93",
                  "position": "s94",
                  "status": "s95",
                  "showcase": true,
                  "only_show_if_degraded": false,
                  "automation_email": "s98",
                  "start_date": "s99"
                },
                "COMPONENT03": {
                  "id": "COMPONENT03",
                  "page_id": "s119",
                  "group_id": "s11a",
                  "created_at": "s11b",
                  "updated_at": "s11c",
                  "group": false,
                  "name": "s11e",
                  "description": "s11f",
                  "position": "s120",
                  "status": "s121",
                  "showcase": true,
                  "only_show_if_degraded": false,
                  "automation_email": "s124",
                  "start_date": "s125"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_component0",
              "kind": "entity",
              "entity": "component",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_COMPONENT_ENTID.component01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_component0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicComponentUptimeFlow": {
          "name": "BasicComponentUptimeFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_COMPONENT_UPTIME_ENTID": {
              "component_uptime01": "COMPONENT_UPTIME01",
              "component_uptime02": "COMPONENT_UPTIME02",
              "component_uptime03": "COMPONENT_UPTIME03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            },
            "STATUSPAGE_TEST_COMPONENT_ENTID": {
              "component01": "COMPONENT01"
            }
          },
          "test": {
            "entity": {
              "component_uptime": {
                "COMPONENT_UPTIME01": {
                  "range_start": "s0",
                  "range_end": "s1",
                  "uptime_percentage": 2,
                  "major_outage": "s3",
                  "partial_outage": "s4",
                  "warnings": "s5",
                  "id": "COMPONENT_UPTIME01",
                  "name": "s7",
                  "related_events": {},
                  "page_id": "PAGE01",
                  "component_id": "COMPONENT01"
                },
                "COMPONENT_UPTIME02": {
                  "range_start": "s5a",
                  "range_end": "s5b",
                  "uptime_percentage": 92,
                  "major_outage": "s5d",
                  "partial_outage": "s5e",
                  "warnings": "s5f",
                  "id": "COMPONENT_UPTIME02",
                  "name": "s61",
                  "related_events": {}
                },
                "COMPONENT_UPTIME03": {
                  "range_start": "sb4",
                  "range_end": "sb5",
                  "uptime_percentage": 182,
                  "major_outage": "sb7",
                  "partial_outage": "sb8",
                  "warnings": "sb9",
                  "id": "COMPONENT_UPTIME03",
                  "name": "sbb",
                  "related_events": {}
                }
              }
            }
          },
          "step": [
            {
              "name": "load_component_uptime0",
              "kind": "entity",
              "entity": "component_uptime",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_COMPONENT_UPTIME_ENTID.component_uptime01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "component_id": "`dm$=p.STATUSPAGE_TEST_COMPONENT_ENTID.component01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_component_uptime0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "component_id": "`dm$=p.STATUSPAGE_TEST_COMPONENT_ENTID.component01`"
              }
            }
          ]
        },
        "BasicPostPagesPageIdIncidentTemplateFlow": {
          "name": "BasicPostPagesPageIdIncidentTemplateFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE_ENTID": {
              "post_pages_page_id_incident_template01": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE01",
              "post_pages_page_id_incident_template02": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE02",
              "post_pages_page_id_incident_template03": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_incident_template": {
                "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE01": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE01"
                },
                "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE02": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE02"
                },
                "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE03": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENT_TEMPLATE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdIncidentFlow": {
          "name": "BasicPostPagesPageIdIncidentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_INCIDENT_ENTID": {
              "post_pages_page_id_incident01": "POST_PAGES_PAGE_ID_INCIDENT01",
              "post_pages_page_id_incident02": "POST_PAGES_PAGE_ID_INCIDENT02",
              "post_pages_page_id_incident03": "POST_PAGES_PAGE_ID_INCIDENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_incident": {
                "POST_PAGES_PAGE_ID_INCIDENT01": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENT01"
                },
                "POST_PAGES_PAGE_ID_INCIDENT02": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENT02"
                },
                "POST_PAGES_PAGE_ID_INCIDENT03": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicIncidentFlow": {
          "name": "BasicIncidentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_INCIDENT_ENTID": {
              "incident01": "INCIDENT01",
              "incident02": "INCIDENT02",
              "incident03": "INCIDENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "incident": {
                "INCIDENT01": {
                  "id": "INCIDENT01",
                  "components": [],
                  "created_at": "s2",
                  "impact": "s3",
                  "impact_override": "s4",
                  "incident_updates": [],
                  "metadata": {},
                  "monitoring_at": "s7",
                  "name": "s8",
                  "page_id": "PAGE01",
                  "postmortem_body": "sa",
                  "postmortem_body_last_updated_at": "sb",
                  "postmortem_ignored": true,
                  "postmortem_notified_subscribers": false,
                  "postmortem_notified_twitter": true,
                  "postmortem_published_at": false,
                  "resolved_at": "s10",
                  "scheduled_auto_completed": false,
                  "scheduled_auto_in_progress": true,
                  "scheduled_for": "s13",
                  "auto_transition_deliver_notifications_at_end": true,
                  "auto_transition_deliver_notifications_at_start": false,
                  "auto_transition_to_maintenance_state": true,
                  "auto_transition_to_operational_state": false,
                  "scheduled_remind_prior": true,
                  "scheduled_reminded_at": "s19",
                  "scheduled_until": "s1a",
                  "shortlink": "s1b",
                  "status": "s1c",
                  "updated_at": "s1d",
                  "reminder_intervals": "s1e"
                },
                "INCIDENT02": {
                  "id": "INCIDENT02",
                  "components": [],
                  "created_at": "s138",
                  "impact": "s139",
                  "impact_override": "s13a",
                  "incident_updates": [],
                  "metadata": {},
                  "monitoring_at": "s13d",
                  "name": "s13e",
                  "page_id": "s13f",
                  "postmortem_body": "s140",
                  "postmortem_body_last_updated_at": "s141",
                  "postmortem_ignored": true,
                  "postmortem_notified_subscribers": false,
                  "postmortem_notified_twitter": true,
                  "postmortem_published_at": false,
                  "resolved_at": "s146",
                  "scheduled_auto_completed": false,
                  "scheduled_auto_in_progress": true,
                  "scheduled_for": "s149",
                  "auto_transition_deliver_notifications_at_end": true,
                  "auto_transition_deliver_notifications_at_start": false,
                  "auto_transition_to_maintenance_state": true,
                  "auto_transition_to_operational_state": false,
                  "scheduled_remind_prior": true,
                  "scheduled_reminded_at": "s14f",
                  "scheduled_until": "s150",
                  "shortlink": "s151",
                  "status": "s152",
                  "updated_at": "s153",
                  "reminder_intervals": "s154"
                },
                "INCIDENT03": {
                  "id": "INCIDENT03",
                  "components": [],
                  "created_at": "s26e",
                  "impact": "s26f",
                  "impact_override": "s270",
                  "incident_updates": [],
                  "metadata": {},
                  "monitoring_at": "s273",
                  "name": "s274",
                  "page_id": "s275",
                  "postmortem_body": "s276",
                  "postmortem_body_last_updated_at": "s277",
                  "postmortem_ignored": true,
                  "postmortem_notified_subscribers": false,
                  "postmortem_notified_twitter": true,
                  "postmortem_published_at": false,
                  "resolved_at": "s27c",
                  "scheduled_auto_completed": false,
                  "scheduled_auto_in_progress": true,
                  "scheduled_for": "s27f",
                  "auto_transition_deliver_notifications_at_end": true,
                  "auto_transition_deliver_notifications_at_start": false,
                  "auto_transition_to_maintenance_state": true,
                  "auto_transition_to_operational_state": false,
                  "scheduled_remind_prior": true,
                  "scheduled_reminded_at": "s285",
                  "scheduled_until": "s286",
                  "shortlink": "s287",
                  "status": "s288",
                  "updated_at": "s289",
                  "reminder_intervals": "s28a"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_incident0",
              "kind": "entity",
              "entity": "incident",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_incident0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicPatchPagesPageIdIncidentFlow": {
          "name": "BasicPatchPagesPageIdIncidentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_INCIDENT_ENTID": {
              "patch_pages_page_id_incident01": "PATCH_PAGES_PAGE_ID_INCIDENT01",
              "patch_pages_page_id_incident02": "PATCH_PAGES_PAGE_ID_INCIDENT02",
              "patch_pages_page_id_incident03": "PATCH_PAGES_PAGE_ID_INCIDENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_incident": {
                "PATCH_PAGES_PAGE_ID_INCIDENT01": {
                  "id": "PATCH_PAGES_PAGE_ID_INCIDENT01"
                },
                "PATCH_PAGES_PAGE_ID_INCIDENT02": {
                  "id": "PATCH_PAGES_PAGE_ID_INCIDENT02"
                },
                "PATCH_PAGES_PAGE_ID_INCIDENT03": {
                  "id": "PATCH_PAGES_PAGE_ID_INCIDENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdIncidentFlow": {
          "name": "BasicPutPagesPageIdIncidentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_INCIDENT_ENTID": {
              "put_pages_page_id_incident01": "PUT_PAGES_PAGE_ID_INCIDENT01",
              "put_pages_page_id_incident02": "PUT_PAGES_PAGE_ID_INCIDENT02",
              "put_pages_page_id_incident03": "PUT_PAGES_PAGE_ID_INCIDENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_incident": {
                "PUT_PAGES_PAGE_ID_INCIDENT01": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENT01"
                },
                "PUT_PAGES_PAGE_ID_INCIDENT02": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENT02"
                },
                "PUT_PAGES_PAGE_ID_INCIDENT03": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdIncidentsIncidentIdIncidentUpdateFlow": {
          "name": "BasicPatchPagesPageIdIncidentsIncidentIdIncidentUpdateFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE_ENTID": {
              "patch_pages_page_id_incidents_incident_id_incident_update01": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE01",
              "patch_pages_page_id_incidents_incident_id_incident_update02": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE02",
              "patch_pages_page_id_incidents_incident_id_incident_update03": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_incidents_incident_id_incident_update": {
                "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE01": {
                  "id": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE01"
                },
                "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE02": {
                  "id": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE02"
                },
                "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE03": {
                  "id": "PATCH_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdIncidentsIncidentIdIncidentUpdateFlow": {
          "name": "BasicPutPagesPageIdIncidentsIncidentIdIncidentUpdateFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE_ENTID": {
              "put_pages_page_id_incidents_incident_id_incident_update01": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE01",
              "put_pages_page_id_incidents_incident_id_incident_update02": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE02",
              "put_pages_page_id_incidents_incident_id_incident_update03": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_incidents_incident_id_incident_update": {
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE01": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE01"
                },
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE02": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE02"
                },
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE03": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_INCIDENT_UPDATE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostmortemFlow": {
          "name": "BasicPostmortemFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POSTMORTEM_ENTID": {
              "postmortem01": "POSTMORTEM01",
              "postmortem02": "POSTMORTEM02",
              "postmortem03": "POSTMORTEM03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            },
            "STATUSPAGE_TEST_INCIDENT_ENTID": {
              "incident01": "INCIDENT01"
            }
          },
          "test": {
            "entity": {
              "postmortem": {
                "POSTMORTEM01": {
                  "preview_key": "s0",
                  "body": "s1",
                  "body_updated_at": "s2",
                  "body_draft": "s3",
                  "body_draft_updated_at": "s4",
                  "published_at": "s5",
                  "notify_subscribers": true,
                  "notify_twitter": false,
                  "custom_tweet": "s8",
                  "created_at": "s9",
                  "updated_at": "sa",
                  "id": "POSTMORTEM01",
                  "page_id": "PAGE01",
                  "incident_id": "INCIDENT01"
                },
                "POSTMORTEM02": {
                  "preview_key": "s6e",
                  "body": "s6f",
                  "body_updated_at": "s70",
                  "body_draft": "s71",
                  "body_draft_updated_at": "s72",
                  "published_at": "s73",
                  "notify_subscribers": true,
                  "notify_twitter": false,
                  "custom_tweet": "s76",
                  "created_at": "s77",
                  "updated_at": "s78",
                  "id": "POSTMORTEM02"
                },
                "POSTMORTEM03": {
                  "preview_key": "sdc",
                  "body": "sdd",
                  "body_updated_at": "sde",
                  "body_draft": "sdf",
                  "body_draft_updated_at": "se0",
                  "published_at": "se1",
                  "notify_subscribers": true,
                  "notify_twitter": false,
                  "custom_tweet": "se4",
                  "created_at": "se5",
                  "updated_at": "se6",
                  "id": "POSTMORTEM03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_postmortem0",
              "kind": "entity",
              "entity": "postmortem",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_POSTMORTEM_ENTID.postmortem01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_postmortem0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`"
              }
            },
            {
              "name": "update_postmortem1",
              "ref": "load_postmortem0",
              "action": "update",
              "reqdata": {
                "preview_key": "s0-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_postmortem0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`",
                "preview_key": "`dm$=s.update_postmortem1.reqdata.preview_key`"
              }
            },
            {
              "name": "load_postmortem2",
              "kind": "entity",
              "entity": "postmortem",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_POSTMORTEM_ENTID.postmortem01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_postmortem0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`",
                "preview_key": "`dm$=s.update_postmortem1.reqdata.preview_key`"
              }
            }
          ]
        },
        "BasicPutPagesPageIdIncidentsIncidentIdPostmortemFlow": {
          "name": "BasicPutPagesPageIdIncidentsIncidentIdPostmortemFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_ENTID": {
              "put_pages_page_id_incidents_incident_id_postmortem01": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM01",
              "put_pages_page_id_incidents_incident_id_postmortem02": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM02",
              "put_pages_page_id_incidents_incident_id_postmortem03": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_incidents_incident_id_postmortem": {
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM01": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM01"
                },
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM02": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM02"
                },
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM03": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdIncidentsIncidentIdPostmortemPublishFlow": {
          "name": "BasicPutPagesPageIdIncidentsIncidentIdPostmortemPublishFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH_ENTID": {
              "put_pages_page_id_incidents_incident_id_postmortem_publish01": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH01",
              "put_pages_page_id_incidents_incident_id_postmortem_publish02": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH02",
              "put_pages_page_id_incidents_incident_id_postmortem_publish03": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_incidents_incident_id_postmortem_publish": {
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH01": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH01"
                },
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH02": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH02"
                },
                "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH03": {
                  "id": "PUT_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_POSTMORTEM_PUBLISH03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdIncidentsIncidentIdSubscriberFlow": {
          "name": "BasicPostPagesPageIdIncidentsIncidentIdSubscriberFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER_ENTID": {
              "post_pages_page_id_incidents_incident_id_subscriber01": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER01",
              "post_pages_page_id_incidents_incident_id_subscriber02": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER02",
              "post_pages_page_id_incidents_incident_id_subscriber03": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_incidents_incident_id_subscriber": {
                "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER01": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER01"
                },
                "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER02": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER02"
                },
                "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER03": {
                  "id": "POST_PAGES_PAGE_ID_INCIDENTS_INCIDENT_ID_SUBSCRIBER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicSubscriberFlow": {
          "name": "BasicSubscriberFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_SUBSCRIBER_ENTID": {
              "subscriber01": "SUBSCRIBER01",
              "subscriber02": "SUBSCRIBER02",
              "subscriber03": "SUBSCRIBER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            },
            "STATUSPAGE_TEST_INCIDENT_ENTID": {
              "incident01": "INCIDENT01"
            }
          },
          "test": {
            "entity": {
              "subscriber": {
                "SUBSCRIBER01": {
                  "id": "SUBSCRIBER01",
                  "skip_confirmation_notification": false,
                  "mode": "s2",
                  "email": "s3",
                  "endpoint": "s4",
                  "phone_number": "s5",
                  "phone_country": "s6",
                  "display_phone_number": "s7",
                  "obfuscated_channel_name": "s8",
                  "workspace_name": "s9",
                  "quarantined_at": "sa",
                  "purge_at": "sb",
                  "components": "sc",
                  "page_access_user_id": "sd",
                  "created_at": "se",
                  "page_id": "PAGE01",
                  "incident_id": "INCIDENT01"
                },
                "SUBSCRIBER02": {
                  "id": "SUBSCRIBER02",
                  "skip_confirmation_notification": false,
                  "mode": "s98",
                  "email": "s99",
                  "endpoint": "s9a",
                  "phone_number": "s9b",
                  "phone_country": "s9c",
                  "display_phone_number": "s9d",
                  "obfuscated_channel_name": "s9e",
                  "workspace_name": "s9f",
                  "quarantined_at": "sa0",
                  "purge_at": "sa1",
                  "components": "sa2",
                  "page_access_user_id": "sa3",
                  "created_at": "sa4"
                },
                "SUBSCRIBER03": {
                  "id": "SUBSCRIBER03",
                  "skip_confirmation_notification": false,
                  "mode": "s12e",
                  "email": "s12f",
                  "endpoint": "s130",
                  "phone_number": "s131",
                  "phone_country": "s132",
                  "display_phone_number": "s133",
                  "obfuscated_channel_name": "s134",
                  "workspace_name": "s135",
                  "quarantined_at": "s136",
                  "purge_at": "s137",
                  "components": "s138",
                  "page_access_user_id": "s139",
                  "created_at": "s13a"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_subscriber0",
              "kind": "entity",
              "entity": "subscriber",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_SUBSCRIBER_ENTID.subscriber01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_subscriber0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "incident_id": "`dm$=p.STATUSPAGE_TEST_INCIDENT_ENTID.incident01`"
              }
            }
          ]
        },
        "BasicResendConfirmationFlow": {
          "name": "BasicResendConfirmationFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_RESEND_CONFIRMATION_ENTID": {
              "resend_confirmation01": "RESEND_CONFIRMATION01",
              "resend_confirmation02": "RESEND_CONFIRMATION02",
              "resend_confirmation03": "RESEND_CONFIRMATION03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "resend_confirmation": {
                "RESEND_CONFIRMATION01": {
                  "id": "RESEND_CONFIRMATION01"
                },
                "RESEND_CONFIRMATION02": {
                  "id": "RESEND_CONFIRMATION02"
                },
                "RESEND_CONFIRMATION03": {
                  "id": "RESEND_CONFIRMATION03"
                }
              }
            }
          },
          "step": []
        },
        "BasicMetricFlow": {
          "name": "BasicMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_METRIC_ENTID": {
              "metric01": "METRIC01",
              "metric02": "METRIC02",
              "metric03": "METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            },
            "STATUSPAGE_TEST_METRICS_PROVIDER_ENTID": {
              "metrics_provider01": "METRICS_PROVIDER01"
            }
          },
          "test": {
            "entity": {
              "metric": {
                "METRIC01": {
                  "id": "METRIC01",
                  "metrics_provider_id": "METRICS_PROVIDER01",
                  "metric_identifier": "s2",
                  "name": "s3",
                  "display": true,
                  "tooltip_description": "s5",
                  "backfilled": true,
                  "y_axis_min": 7,
                  "y_axis_max": 8,
                  "y_axis_hidden": false,
                  "suffix": "sa",
                  "decimal_places": "sb",
                  "most_recent_data_at": "sc",
                  "created_at": "sd",
                  "updated_at": "se",
                  "last_fetched_at": "sf",
                  "backfill_percentage": "s10",
                  "reference_name": "s11",
                  "page_id": "PAGE01"
                },
                "METRIC02": {
                  "id": "METRIC02",
                  "metrics_provider_id": "sb5",
                  "metric_identifier": "sb6",
                  "name": "sb7",
                  "display": true,
                  "tooltip_description": "sb9",
                  "backfilled": true,
                  "y_axis_min": 187,
                  "y_axis_max": 188,
                  "y_axis_hidden": false,
                  "suffix": "sbe",
                  "decimal_places": "sbf",
                  "most_recent_data_at": "sc0",
                  "created_at": "sc1",
                  "updated_at": "sc2",
                  "last_fetched_at": "sc3",
                  "backfill_percentage": "sc4",
                  "reference_name": "sc5"
                },
                "METRIC03": {
                  "id": "METRIC03",
                  "metrics_provider_id": "s169",
                  "metric_identifier": "s16a",
                  "name": "s16b",
                  "display": true,
                  "tooltip_description": "s16d",
                  "backfilled": true,
                  "y_axis_min": 367,
                  "y_axis_max": 368,
                  "y_axis_hidden": false,
                  "suffix": "s172",
                  "decimal_places": "s173",
                  "most_recent_data_at": "s174",
                  "created_at": "s175",
                  "updated_at": "s176",
                  "last_fetched_at": "s177",
                  "backfill_percentage": "s178",
                  "reference_name": "s179"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_metric0",
              "kind": "entity",
              "entity": "metric",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_METRIC_ENTID.metric01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "metrics_provider_id": "`dm$=p.STATUSPAGE_TEST_METRICS_PROVIDER_ENTID.metrics_provider01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_metric0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "metrics_provider_id": "`dm$=p.STATUSPAGE_TEST_METRICS_PROVIDER_ENTID.metrics_provider01`"
              }
            }
          ]
        },
        "BasicPostPagesPageIdMetricsDataFlow": {
          "name": "BasicPostPagesPageIdMetricsDataFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_METRICS_DATA_ENTID": {
              "post_pages_page_id_metrics_data01": "POST_PAGES_PAGE_ID_METRICS_DATA01",
              "post_pages_page_id_metrics_data02": "POST_PAGES_PAGE_ID_METRICS_DATA02",
              "post_pages_page_id_metrics_data03": "POST_PAGES_PAGE_ID_METRICS_DATA03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_metrics_data": {
                "POST_PAGES_PAGE_ID_METRICS_DATA01": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_DATA01"
                },
                "POST_PAGES_PAGE_ID_METRICS_DATA02": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_DATA02"
                },
                "POST_PAGES_PAGE_ID_METRICS_DATA03": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_DATA03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdMetricFlow": {
          "name": "BasicPatchPagesPageIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_METRIC_ENTID": {
              "patch_pages_page_id_metric01": "PATCH_PAGES_PAGE_ID_METRIC01",
              "patch_pages_page_id_metric02": "PATCH_PAGES_PAGE_ID_METRIC02",
              "patch_pages_page_id_metric03": "PATCH_PAGES_PAGE_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_metric": {
                "PATCH_PAGES_PAGE_ID_METRIC01": {
                  "id": "PATCH_PAGES_PAGE_ID_METRIC01"
                },
                "PATCH_PAGES_PAGE_ID_METRIC02": {
                  "id": "PATCH_PAGES_PAGE_ID_METRIC02"
                },
                "PATCH_PAGES_PAGE_ID_METRIC03": {
                  "id": "PATCH_PAGES_PAGE_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdMetricFlow": {
          "name": "BasicPutPagesPageIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_METRIC_ENTID": {
              "put_pages_page_id_metric01": "PUT_PAGES_PAGE_ID_METRIC01",
              "put_pages_page_id_metric02": "PUT_PAGES_PAGE_ID_METRIC02",
              "put_pages_page_id_metric03": "PUT_PAGES_PAGE_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_metric": {
                "PUT_PAGES_PAGE_ID_METRIC01": {
                  "id": "PUT_PAGES_PAGE_ID_METRIC01"
                },
                "PUT_PAGES_PAGE_ID_METRIC02": {
                  "id": "PUT_PAGES_PAGE_ID_METRIC02"
                },
                "PUT_PAGES_PAGE_ID_METRIC03": {
                  "id": "PUT_PAGES_PAGE_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdMetricsMetricIdDataFlow": {
          "name": "BasicPostPagesPageIdMetricsMetricIdDataFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA_ENTID": {
              "post_pages_page_id_metrics_metric_id_data01": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA01",
              "post_pages_page_id_metrics_metric_id_data02": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA02",
              "post_pages_page_id_metrics_metric_id_data03": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_metrics_metric_id_data": {
                "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA01": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA01"
                },
                "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA02": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA02"
                },
                "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA03": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_METRIC_ID_DATA03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdMetricsProviderFlow": {
          "name": "BasicPostPagesPageIdMetricsProviderFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_METRICS_PROVIDER_ENTID": {
              "post_pages_page_id_metrics_provider01": "POST_PAGES_PAGE_ID_METRICS_PROVIDER01",
              "post_pages_page_id_metrics_provider02": "POST_PAGES_PAGE_ID_METRICS_PROVIDER02",
              "post_pages_page_id_metrics_provider03": "POST_PAGES_PAGE_ID_METRICS_PROVIDER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_metrics_provider": {
                "POST_PAGES_PAGE_ID_METRICS_PROVIDER01": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_PROVIDER01"
                },
                "POST_PAGES_PAGE_ID_METRICS_PROVIDER02": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_PROVIDER02"
                },
                "POST_PAGES_PAGE_ID_METRICS_PROVIDER03": {
                  "id": "POST_PAGES_PAGE_ID_METRICS_PROVIDER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicMetricsProviderFlow": {
          "name": "BasicMetricsProviderFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_METRICS_PROVIDER_ENTID": {
              "metrics_provider01": "METRICS_PROVIDER01",
              "metrics_provider02": "METRICS_PROVIDER02",
              "metrics_provider03": "METRICS_PROVIDER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "metrics_provider": {
                "METRICS_PROVIDER01": {
                  "id": "METRICS_PROVIDER01",
                  "type": "s1",
                  "disabled": true,
                  "metric_base_uri": "s3",
                  "last_revalidated_at": "s4",
                  "created_at": "s5",
                  "updated_at": "s6",
                  "page_id": "PAGE01"
                },
                "METRICS_PROVIDER02": {
                  "id": "METRICS_PROVIDER02",
                  "type": "s51",
                  "disabled": true,
                  "metric_base_uri": "s53",
                  "last_revalidated_at": "s54",
                  "created_at": "s55",
                  "updated_at": "s56",
                  "page_id": "s57"
                },
                "METRICS_PROVIDER03": {
                  "id": "METRICS_PROVIDER03",
                  "type": "sa1",
                  "disabled": true,
                  "metric_base_uri": "sa3",
                  "last_revalidated_at": "sa4",
                  "created_at": "sa5",
                  "updated_at": "sa6",
                  "page_id": "sa7"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_metrics_provider0",
              "kind": "entity",
              "entity": "metrics_provider",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_METRICS_PROVIDER_ENTID.metrics_provider01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_metrics_provider0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicPatchPagesPageIdMetricsProviderFlow": {
          "name": "BasicPatchPagesPageIdMetricsProviderFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_METRICS_PROVIDER_ENTID": {
              "patch_pages_page_id_metrics_provider01": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER01",
              "patch_pages_page_id_metrics_provider02": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER02",
              "patch_pages_page_id_metrics_provider03": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_metrics_provider": {
                "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER01": {
                  "id": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER01"
                },
                "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER02": {
                  "id": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER02"
                },
                "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER03": {
                  "id": "PATCH_PAGES_PAGE_ID_METRICS_PROVIDER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdMetricsProviderFlow": {
          "name": "BasicPutPagesPageIdMetricsProviderFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_METRICS_PROVIDER_ENTID": {
              "put_pages_page_id_metrics_provider01": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER01",
              "put_pages_page_id_metrics_provider02": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER02",
              "put_pages_page_id_metrics_provider03": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_metrics_provider": {
                "PUT_PAGES_PAGE_ID_METRICS_PROVIDER01": {
                  "id": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER01"
                },
                "PUT_PAGES_PAGE_ID_METRICS_PROVIDER02": {
                  "id": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER02"
                },
                "PUT_PAGES_PAGE_ID_METRICS_PROVIDER03": {
                  "id": "PUT_PAGES_PAGE_ID_METRICS_PROVIDER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdMetricFlow": {
          "name": "BasicPostPagesPageIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_METRIC_ENTID": {
              "post_pages_page_id_metric01": "POST_PAGES_PAGE_ID_METRIC01",
              "post_pages_page_id_metric02": "POST_PAGES_PAGE_ID_METRIC02",
              "post_pages_page_id_metric03": "POST_PAGES_PAGE_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_metric": {
                "POST_PAGES_PAGE_ID_METRIC01": {
                  "id": "POST_PAGES_PAGE_ID_METRIC01"
                },
                "POST_PAGES_PAGE_ID_METRIC02": {
                  "id": "POST_PAGES_PAGE_ID_METRIC02"
                },
                "POST_PAGES_PAGE_ID_METRIC03": {
                  "id": "POST_PAGES_PAGE_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdPageAccessGroupFlow": {
          "name": "BasicPostPagesPageIdPageAccessGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP_ENTID": {
              "post_pages_page_id_page_access_group01": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01",
              "post_pages_page_id_page_access_group02": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02",
              "post_pages_page_id_page_access_group03": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_page_access_group": {
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPageAccessGroupFlow": {
          "name": "BasicPageAccessGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PAGE_ACCESS_GROUP_ENTID": {
              "page_access_group01": "PAGE_ACCESS_GROUP01",
              "page_access_group02": "PAGE_ACCESS_GROUP02",
              "page_access_group03": "PAGE_ACCESS_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "page_access_group": {
                "PAGE_ACCESS_GROUP01": {
                  "id": "PAGE_ACCESS_GROUP01",
                  "page_id": "PAGE01",
                  "name": "s2",
                  "page_access_user_ids": [],
                  "external_identifier": "s4",
                  "metric_ids": [],
                  "component_ids": [],
                  "created_at": "s7",
                  "updated_at": "s8"
                },
                "PAGE_ACCESS_GROUP02": {
                  "id": "PAGE_ACCESS_GROUP02",
                  "page_id": "s5b",
                  "name": "s5c",
                  "page_access_user_ids": [],
                  "external_identifier": "s5e",
                  "metric_ids": [],
                  "component_ids": [],
                  "created_at": "s61",
                  "updated_at": "s62"
                },
                "PAGE_ACCESS_GROUP03": {
                  "id": "PAGE_ACCESS_GROUP03",
                  "page_id": "sb5",
                  "name": "sb6",
                  "page_access_user_ids": [],
                  "external_identifier": "sb8",
                  "metric_ids": [],
                  "component_ids": [],
                  "created_at": "sbb",
                  "updated_at": "sbc"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_page_access_group0",
              "kind": "entity",
              "entity": "page_access_group",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_PAGE_ACCESS_GROUP_ENTID.page_access_group01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_page_access_group0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicPatchPagesPageIdPageAccessGroupFlow": {
          "name": "BasicPatchPagesPageIdPageAccessGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP_ENTID": {
              "patch_pages_page_id_page_access_group01": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01",
              "patch_pages_page_id_page_access_group02": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02",
              "patch_pages_page_id_page_access_group03": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_page_access_group": {
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdPageAccessGroupFlow": {
          "name": "BasicPutPagesPageIdPageAccessGroupFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP_ENTID": {
              "put_pages_page_id_page_access_group01": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01",
              "put_pages_page_id_page_access_group02": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02",
              "put_pages_page_id_page_access_group03": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_page_access_group": {
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP01"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP02"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUP03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow": {
          "name": "BasicPatchPagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT_ENTID": {
              "patch_pages_page_id_page_access_groups_page_access_group_id_component01": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01",
              "patch_pages_page_id_page_access_groups_page_access_group_id_component02": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02",
              "patch_pages_page_id_page_access_groups_page_access_group_id_component03": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_page_access_groups_page_access_group_id_component": {
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow": {
          "name": "BasicPutPagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT_ENTID": {
              "put_pages_page_id_page_access_groups_page_access_group_id_component01": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01",
              "put_pages_page_id_page_access_groups_page_access_group_id_component02": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02",
              "put_pages_page_id_page_access_groups_page_access_group_id_component03": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_page_access_groups_page_access_group_id_component": {
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow": {
          "name": "BasicPostPagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT_ENTID": {
              "post_pages_page_id_page_access_groups_page_access_group_id_component01": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01",
              "post_pages_page_id_page_access_groups_page_access_group_id_component02": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02",
              "post_pages_page_id_page_access_groups_page_access_group_id_component03": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_page_access_groups_page_access_group_id_component": {
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicDeletePagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow": {
          "name": "BasicDeletePagesPageIdPageAccessGroupsPageAccessGroupIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT_ENTID": {
              "delete_pages_page_id_page_access_groups_page_access_group_id_component01": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01",
              "delete_pages_page_id_page_access_groups_page_access_group_id_component02": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02",
              "delete_pages_page_id_page_access_groups_page_access_group_id_component03": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "delete_pages_page_id_page_access_groups_page_access_group_id_component": {
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT01"
                },
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT02"
                },
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_GROUPS_PAGE_ACCESS_GROUP_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdPageAccessUserFlow": {
          "name": "BasicPostPagesPageIdPageAccessUserFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_PAGE_ACCESS_USER_ENTID": {
              "post_pages_page_id_page_access_user01": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER01",
              "post_pages_page_id_page_access_user02": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER02",
              "post_pages_page_id_page_access_user03": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_page_access_user": {
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER01": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER01"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER02": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER02"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER03": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPageAccessUserFlow": {
          "name": "BasicPageAccessUserFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PAGE_ACCESS_USER_ENTID": {
              "page_access_user01": "PAGE_ACCESS_USER01",
              "page_access_user02": "PAGE_ACCESS_USER02",
              "page_access_user03": "PAGE_ACCESS_USER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "page_access_user": {
                "PAGE_ACCESS_USER01": {
                  "id": "PAGE_ACCESS_USER01",
                  "page_id": "PAGE01",
                  "email": "s2",
                  "external_login": "s3",
                  "page_access_group_id": "s4",
                  "page_access_group_ids": "s5",
                  "created_at": "s6",
                  "updated_at": "s7"
                },
                "PAGE_ACCESS_USER02": {
                  "id": "PAGE_ACCESS_USER02",
                  "page_id": "s51",
                  "email": "s52",
                  "external_login": "s53",
                  "page_access_group_id": "s54",
                  "page_access_group_ids": "s55",
                  "created_at": "s56",
                  "updated_at": "s57"
                },
                "PAGE_ACCESS_USER03": {
                  "id": "PAGE_ACCESS_USER03",
                  "page_id": "sa1",
                  "email": "sa2",
                  "external_login": "sa3",
                  "page_access_group_id": "sa4",
                  "page_access_group_ids": "sa5",
                  "created_at": "sa6",
                  "updated_at": "sa7"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_page_access_user0",
              "kind": "entity",
              "entity": "page_access_user",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_PAGE_ACCESS_USER_ENTID.page_access_user01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_page_access_user0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            },
            {
              "name": "update_page_access_user1",
              "ref": "load_page_access_user0",
              "action": "update",
              "reqdata": {
                "email": "s2-`$WHEN`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_page_access_user0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "email": "`dm$=s.update_page_access_user1.reqdata.email`"
              }
            },
            {
              "name": "load_page_access_user2",
              "kind": "entity",
              "entity": "page_access_user",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_PAGE_ACCESS_USER_ENTID.page_access_user01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_page_access_user0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`",
                "email": "`dm$=s.update_page_access_user1.reqdata.email`"
              }
            }
          ]
        },
        "BasicPatchPagesPageIdPageAccessUsersPageAccessUserIdComponentFlow": {
          "name": "BasicPatchPagesPageIdPageAccessUsersPageAccessUserIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT_ENTID": {
              "patch_pages_page_id_page_access_users_page_access_user_id_component01": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01",
              "patch_pages_page_id_page_access_users_page_access_user_id_component02": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02",
              "patch_pages_page_id_page_access_users_page_access_user_id_component03": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_page_access_users_page_access_user_id_component": {
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdPageAccessUsersPageAccessUserIdComponentFlow": {
          "name": "BasicPutPagesPageIdPageAccessUsersPageAccessUserIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT_ENTID": {
              "put_pages_page_id_page_access_users_page_access_user_id_component01": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01",
              "put_pages_page_id_page_access_users_page_access_user_id_component02": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02",
              "put_pages_page_id_page_access_users_page_access_user_id_component03": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_page_access_users_page_access_user_id_component": {
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdPageAccessUsersPageAccessUserIdComponentFlow": {
          "name": "BasicPostPagesPageIdPageAccessUsersPageAccessUserIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT_ENTID": {
              "post_pages_page_id_page_access_users_page_access_user_id_component01": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01",
              "post_pages_page_id_page_access_users_page_access_user_id_component02": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02",
              "post_pages_page_id_page_access_users_page_access_user_id_component03": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_page_access_users_page_access_user_id_component": {
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicDeletePagesPageIdPageAccessUsersPageAccessUserIdComponentFlow": {
          "name": "BasicDeletePagesPageIdPageAccessUsersPageAccessUserIdComponentFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT_ENTID": {
              "delete_pages_page_id_page_access_users_page_access_user_id_component01": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01",
              "delete_pages_page_id_page_access_users_page_access_user_id_component02": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02",
              "delete_pages_page_id_page_access_users_page_access_user_id_component03": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "delete_pages_page_id_page_access_users_page_access_user_id_component": {
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT01"
                },
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT02"
                },
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_COMPONENT03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdPageAccessUsersPageAccessUserIdMetricFlow": {
          "name": "BasicPatchPagesPageIdPageAccessUsersPageAccessUserIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC_ENTID": {
              "patch_pages_page_id_page_access_users_page_access_user_id_metric01": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01",
              "patch_pages_page_id_page_access_users_page_access_user_id_metric02": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02",
              "patch_pages_page_id_page_access_users_page_access_user_id_metric03": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_page_access_users_page_access_user_id_metric": {
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02"
                },
                "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03": {
                  "id": "PATCH_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdPageAccessUsersPageAccessUserIdMetricFlow": {
          "name": "BasicPutPagesPageIdPageAccessUsersPageAccessUserIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC_ENTID": {
              "put_pages_page_id_page_access_users_page_access_user_id_metric01": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01",
              "put_pages_page_id_page_access_users_page_access_user_id_metric02": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02",
              "put_pages_page_id_page_access_users_page_access_user_id_metric03": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_page_access_users_page_access_user_id_metric": {
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02"
                },
                "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03": {
                  "id": "PUT_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdPageAccessUsersPageAccessUserIdMetricFlow": {
          "name": "BasicPostPagesPageIdPageAccessUsersPageAccessUserIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC_ENTID": {
              "post_pages_page_id_page_access_users_page_access_user_id_metric01": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01",
              "post_pages_page_id_page_access_users_page_access_user_id_metric02": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02",
              "post_pages_page_id_page_access_users_page_access_user_id_metric03": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_page_access_users_page_access_user_id_metric": {
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02"
                },
                "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03": {
                  "id": "POST_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicDeletePagesPageIdPageAccessUsersPageAccessUserIdMetricFlow": {
          "name": "BasicDeletePagesPageIdPageAccessUsersPageAccessUserIdMetricFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC_ENTID": {
              "delete_pages_page_id_page_access_users_page_access_user_id_metric01": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01",
              "delete_pages_page_id_page_access_users_page_access_user_id_metric02": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02",
              "delete_pages_page_id_page_access_users_page_access_user_id_metric03": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "delete_pages_page_id_page_access_users_page_access_user_id_metric": {
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC01"
                },
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC02"
                },
                "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03": {
                  "id": "DELETE_PAGES_PAGE_ID_PAGE_ACCESS_USERS_PAGE_ACCESS_USER_ID_METRIC03"
                }
              }
            }
          },
          "step": []
        },
        "BasicStatusEmbedConfigFlow": {
          "name": "BasicStatusEmbedConfigFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_STATUS_EMBED_CONFIG_ENTID": {
              "status_embed_config01": "STATUS_EMBED_CONFIG01",
              "status_embed_config02": "STATUS_EMBED_CONFIG02",
              "status_embed_config03": "STATUS_EMBED_CONFIG03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "status_embed_config": {
                "STATUS_EMBED_CONFIG01": {
                  "page_id": "PAGE01",
                  "position": "s1",
                  "incident_background_color": "s2",
                  "incident_text_color": "s3",
                  "maintenance_background_color": "s4",
                  "maintenance_text_color": "s5",
                  "id": "STATUS_EMBED_CONFIG01"
                },
                "STATUS_EMBED_CONFIG02": {
                  "page_id": "s3c",
                  "position": "s3d",
                  "incident_background_color": "s3e",
                  "incident_text_color": "s3f",
                  "maintenance_background_color": "s40",
                  "maintenance_text_color": "s41",
                  "id": "STATUS_EMBED_CONFIG02"
                },
                "STATUS_EMBED_CONFIG03": {
                  "page_id": "s78",
                  "position": "s79",
                  "incident_background_color": "s7a",
                  "incident_text_color": "s7b",
                  "maintenance_background_color": "s7c",
                  "maintenance_text_color": "s7d",
                  "id": "STATUS_EMBED_CONFIG03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_status_embed_config0",
              "kind": "entity",
              "entity": "status_embed_config",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_STATUS_EMBED_CONFIG_ENTID.status_embed_config01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_status_embed_config0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicPatchPagesPageIdStatusEmbedConfigFlow": {
          "name": "BasicPatchPagesPageIdStatusEmbedConfigFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG_ENTID": {
              "patch_pages_page_id_status_embed_config01": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG01",
              "patch_pages_page_id_status_embed_config02": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG02",
              "patch_pages_page_id_status_embed_config03": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_status_embed_config": {
                "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG01": {
                  "id": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG01"
                },
                "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG02": {
                  "id": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG02"
                },
                "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG03": {
                  "id": "PATCH_PAGES_PAGE_ID_STATUS_EMBED_CONFIG03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPutPagesPageIdStatusEmbedConfigFlow": {
          "name": "BasicPutPagesPageIdStatusEmbedConfigFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG_ENTID": {
              "put_pages_page_id_status_embed_config01": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG01",
              "put_pages_page_id_status_embed_config02": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG02",
              "put_pages_page_id_status_embed_config03": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "put_pages_page_id_status_embed_config": {
                "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG01": {
                  "id": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG01"
                },
                "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG02": {
                  "id": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG02"
                },
                "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG03": {
                  "id": "PUT_PAGES_PAGE_ID_STATUS_EMBED_CONFIG03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdSubscriberFlow": {
          "name": "BasicPostPagesPageIdSubscriberFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_SUBSCRIBER_ENTID": {
              "post_pages_page_id_subscriber01": "POST_PAGES_PAGE_ID_SUBSCRIBER01",
              "post_pages_page_id_subscriber02": "POST_PAGES_PAGE_ID_SUBSCRIBER02",
              "post_pages_page_id_subscriber03": "POST_PAGES_PAGE_ID_SUBSCRIBER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_subscriber": {
                "POST_PAGES_PAGE_ID_SUBSCRIBER01": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBER01"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBER02": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBER02"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBER03": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBER03"
                }
              }
            }
          },
          "step": []
        },
        "BasicSubscriberCountFlow": {
          "name": "BasicSubscriberCountFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_SUBSCRIBER_COUNT_ENTID": {
              "subscriber_count01": "SUBSCRIBER_COUNT01",
              "subscriber_count02": "SUBSCRIBER_COUNT02",
              "subscriber_count03": "SUBSCRIBER_COUNT03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "subscriber_count": {
                "SUBSCRIBER_COUNT01": {
                  "email": "s0",
                  "sms": "s1",
                  "webhook": "s2",
                  "integration_partner": "s3",
                  "slack": "s4",
                  "teams": "s5",
                  "id": "SUBSCRIBER_COUNT01",
                  "page_id": "PAGE01"
                },
                "SUBSCRIBER_COUNT02": {
                  "email": "s3c",
                  "sms": "s3d",
                  "webhook": "s3e",
                  "integration_partner": "s3f",
                  "slack": "s40",
                  "teams": "s41",
                  "id": "SUBSCRIBER_COUNT02"
                },
                "SUBSCRIBER_COUNT03": {
                  "email": "s78",
                  "sms": "s79",
                  "webhook": "s7a",
                  "integration_partner": "s7b",
                  "slack": "s7c",
                  "teams": "s7d",
                  "id": "SUBSCRIBER_COUNT03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_subscriber_count0",
              "kind": "entity",
              "entity": "subscriber_count",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_SUBSCRIBER_COUNT_ENTID.subscriber_count01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_subscriber_count0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicSubscriberCountByTypeAndStateFlow": {
          "name": "BasicSubscriberCountByTypeAndStateFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_SUBSCRIBER_COUNT_BY_TYPE_AND_STATE_ENTID": {
              "subscriber_count_by_type_and_state01": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE01",
              "subscriber_count_by_type_and_state02": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE02",
              "subscriber_count_by_type_and_state03": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE",
            "STATUSPAGE_TEST_PAGE_ENTID": {
              "page01": "PAGE01"
            }
          },
          "test": {
            "entity": {
              "subscriber_count_by_type_and_state": {
                "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE01": {
                  "email": {},
                  "sms": {},
                  "webhook": {},
                  "integration_partner": {},
                  "slack": {},
                  "teams": {},
                  "id": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE01",
                  "page_id": "PAGE01"
                },
                "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE02": {
                  "email": {},
                  "sms": {},
                  "webhook": {},
                  "integration_partner": {},
                  "slack": {},
                  "teams": {},
                  "id": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE02"
                },
                "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE03": {
                  "email": {},
                  "sms": {},
                  "webhook": {},
                  "integration_partner": {},
                  "slack": {},
                  "teams": {},
                  "id": "SUBSCRIBER_COUNT_BY_TYPE_AND_STATE03"
                }
              }
            }
          },
          "step": [
            {
              "name": "load_subscriber_count_by_type_and_state0",
              "kind": "entity",
              "entity": "subscriber_count_by_type_and_state",
              "action": "load",
              "match": {
                "id": "`dm$=p.STATUSPAGE_TEST_SUBSCRIBER_COUNT_BY_TYPE_AND_STATE_ENTID.subscriber_count_by_type_and_state01`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              },
              "valid": {
                "`$OPEN`": true,
                "id": "`dm$=s.load_subscriber_count_by_type_and_state0.match.id`",
                "page_id": "`dm$=p.STATUSPAGE_TEST_PAGE_ENTID.page01`"
              }
            }
          ]
        },
        "BasicPostPagesPageIdSubscribersReactivateFlow": {
          "name": "BasicPostPagesPageIdSubscribersReactivateFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE_ENTID": {
              "post_pages_page_id_subscribers_reactivate01": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE01",
              "post_pages_page_id_subscribers_reactivate02": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE02",
              "post_pages_page_id_subscribers_reactivate03": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_subscribers_reactivate": {
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE01": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE01"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE02": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE02"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE03": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_REACTIVATE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdSubscribersResendConfirmationFlow": {
          "name": "BasicPostPagesPageIdSubscribersResendConfirmationFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION_ENTID": {
              "post_pages_page_id_subscribers_resend_confirmation01": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION01",
              "post_pages_page_id_subscribers_resend_confirmation02": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION02",
              "post_pages_page_id_subscribers_resend_confirmation03": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_subscribers_resend_confirmation": {
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION01": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION01"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION02": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION02"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION03": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_RESEND_CONFIRMATION03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPostPagesPageIdSubscribersUnsubscribeFlow": {
          "name": "BasicPostPagesPageIdSubscribersUnsubscribeFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE_ENTID": {
              "post_pages_page_id_subscribers_unsubscribe01": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE01",
              "post_pages_page_id_subscribers_unsubscribe02": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE02",
              "post_pages_page_id_subscribers_unsubscribe03": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "post_pages_page_id_subscribers_unsubscribe": {
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE01": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE01"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE02": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE02"
                },
                "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE03": {
                  "id": "POST_PAGES_PAGE_ID_SUBSCRIBERS_UNSUBSCRIBE03"
                }
              }
            }
          },
          "step": []
        },
        "BasicPatchPagesPageIdSubscriberFlow": {
          "name": "BasicPatchPagesPageIdSubscriberFlow",
          "active": true,
          "param": {
            "STATUSPAGE_TEST_PATCH_PAGES_PAGE_ID_SUBSCRIBER_ENTID": {
              "patch_pages_page_id_subscriber01": "PATCH_PAGES_PAGE_ID_SUBSCRIBER01",
              "patch_pages_page_id_subscriber02": "PATCH_PAGES_PAGE_ID_SUBSCRIBER02",
              "patch_pages_page_id_subscriber03": "PATCH_PAGES_PAGE_ID_SUBSCRIBER03"
            },
            "STATUSPAGE_TEST_LIVE": "FALSE",
            "STATUSPAGE_TEST_EXPLAIN": "FALSE"
          },
          "test": {
            "entity": {
              "patch_pages_page_id_subscriber": {
                "PATCH_PAGES_PAGE_ID_SUBSCRIBER01": {
                  "id": "PATCH_PAGES_PAGE_ID_SUBSCRIBER01"
                },
                "PATCH_PAGES_PAGE_ID_SUBSCRIBER02": {
                  "id": "PATCH_PAGES_PAGE_ID_SUBSCRIBER02"
                },
                "PATCH_PAGES_PAGE_ID_SUBSCRIBER03": {
                  "id": "PATCH_PAGES_PAGE_ID_SUBSCRIBER03"
                }
              }
            }
          },
          "step": []
        }
      }
    }
  }
}