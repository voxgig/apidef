# Entity: component_group

main: api: entity: component_group: {

  alias: field: {}

  op: {
    create: {
      path: "/pages/{page_id}/component-groups",
      pathalt: [
        {
          path: "/pages/{page_id}/component-groups",
          page_id: true
        }
      ],
      method: "post",
      kind: "req",
      param: {
        page_id: {
          required: true,
          name: "page_id",
          Name: "PageId",
          NAME: "PAGE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {}


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          page_id: "`$STRING`"
        }
      }

      name: "create",
      Name: "Create",
      NAME: "CREATE"
    }

    list: {
      path: "/pages/{page_id}/component-groups",
      pathalt: [
        {
          path: "/pages/{page_id}/component-groups",
          page_id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        page_id: {
          required: true,
          name: "page_id",
          Name: "PageId",
          NAME: "PAGE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        page: {
          required: false,
          name: "page",
          Name: "Page",
          NAME: "PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }

        per_page: {
          required: false,
          name: "per_page",
          Name: "PerPage",
          NAME: "PER_PAGE",
          type: "integer",
          Type: "Integer",
          TYPE: "INTEGER"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          page_id: "`$STRING`"
        }
      }

      name: "list",
      Name: "List",
      NAME: "LIST"
    }

    update: {
      path: "/pages/{page_id}/component-groups/{id}",
      pathalt: [
        {
          path: "/pages/{page_id}/component-groups/{id}",
          page_id: true,
          id: true
        }
      ],
      method: "put",
      kind: "req",
      param: {
        page_id: {
          required: true,
          name: "page_id",
          Name: "PageId",
          NAME: "PAGE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {}


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: default
      reqform: "`reqdata`",
      validate: {
        params: {
          page_id: "`$STRING`",
          id: "`$STRING`"
        }
      }

      name: "update",
      Name: "Update",
      NAME: "UPDATE"
    }

    remove: {
      path: "/pages/{page_id}/component-groups/{id}",
      pathalt: [
        {
          path: "/pages/{page_id}/component-groups/{id}",
          page_id: true,
          id: true
        }
      ],
      method: "delete",
      kind: "res",
      param: {
        page_id: {
          required: true,
          name: "page_id",
          Name: "PageId",
          NAME: "PAGE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {}


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          page_id: "`$STRING`",
          id: "`$STRING`"
        }
      }

      name: "remove",
      Name: "Remove",
      NAME: "REMOVE"
    }

    load: {
      path: "/pages/{page_id}/component-groups/{id}",
      pathalt: [
        {
          path: "/pages/{page_id}/component-groups/{id}",
          page_id: true,
          id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        page_id: {
          required: true,
          name: "page_id",
          Name: "PageId",
          NAME: "PAGE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        id: {
          required: true,
          name: "id",
          Name: "Id",
          NAME: "ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {}


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          page_id: "`$STRING`",
          id: "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }
  }

  field: {
    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Component Group Identifier"
    }

    page_id: {
      name: "page_id",
      Name: "PageId",
      NAME: "PAGE_ID",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }

    name: {
      name: "name",
      Name: "Name",
      NAME: "NAME",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }

    description: {
      name: "description",
      Name: "Description",
      NAME: "DESCRIPTION",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }

    components: {
      name: "components",
      Name: "Components",
      NAME: "COMPONENTS",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }

    position: {
      name: "position",
      Name: "Position",
      NAME: "POSITION",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }

    created_at: {
      name: "created_at",
      Name: "CreatedAt",
      NAME: "CREATED_AT",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }

    updated_at: {
      name: "updated_at",
      Name: "UpdatedAt",
      NAME: "UPDATED_AT",
      type: "string",
      Type: "String",
      TYPE: "STRING"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [
    "page"
  ],
  name: "component_group",
  Name: "ComponentGroup",
  NAME: "COMPONENT_GROUP",
  "key$": "component_group"


}
