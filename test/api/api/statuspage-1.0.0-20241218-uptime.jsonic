# Entity: uptime

main: api: entity: uptime: {

  alias: field: {}

  op: {
    load: {
      path: "/pages/{page_id}/components/{component_id}/uptime",
      pathalt: [
        {
          path: "/pages/{page_id}/component-groups/{id}/uptime",
          page_id: true,
          id: true
        }

        {
          path: "/pages/{page_id}/components/{component_id}/uptime",
          page_id: true,
          component_id: true
        }
      ],
      method: "get",
      kind: "res",
      param: {
        page_id: {
          required: true,
          name: "page_id",
          Name: "PageId",
          NAME: "PAGE_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }

        component_id: {
          required: true,
          name: "component_id",
          Name: "ComponentId",
          NAME: "COMPONENT_ID",
          type: "string",
          Type: "String",
          TYPE: "STRING"
        }
      }

      query: {
        start: {
          required: false,
          name: "start",
          Name: "Start",
          NAME: "START",
          type: "partialstartdate",
          Type: "PartialStartDate",
          TYPE: "PARTIALSTARTDATE"
        }

        end: {
          required: false,
          name: "end",
          Name: "End",
          NAME: "END",
          type: "partialenddate",
          Type: "PartialEndDate",
          TYPE: "PARTIALENDDATE"
        }
      }


      # resform derivation: default
      resform: "`body`",

      # reqform derivation: none
      reqform: "`body`",
      validate: {
        params: {
          page_id: "`$STRING`",
          component_id: "`$STRING`"
        }
      }

      name: "load",
      Name: "Load",
      NAME: "LOAD"
    }
  }

  field: {
    range_start: {
      name: "range_start",
      Name: "RangeStart",
      NAME: "RANGE_START",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Start date used for uptime calculation (see the warnings field in the response if this value does not match the start parameter you provided)."
    }

    range_end: {
      name: "range_end",
      Name: "RangeEnd",
      NAME: "RANGE_END",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "End date used for uptime calculation (see the warnings field in the response if this value does not match the end parameter you provided)."
    }

    uptime_percentage: {
      name: "uptime_percentage",
      Name: "UptimePercentage",
      NAME: "UPTIME_PERCENTAGE",
      type: "number",
      Type: "Number",
      TYPE: "NUMBER",
      short: "Uptime percentage for a component"
    }

    major_outage: {
      name: "major_outage",
      Name: "MajorOutage",
      NAME: "MAJOR_OUTAGE",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Seconds of major outage"
    }

    partial_outage: {
      name: "partial_outage",
      Name: "PartialOutage",
      NAME: "PARTIAL_OUTAGE",
      type: "integer",
      Type: "Integer",
      TYPE: "INTEGER",
      short: "Seconds of partial outage"
    }

    warnings: {
      name: "warnings",
      Name: "Warnings",
      NAME: "WARNINGS",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Warning messages related to the uptime query that may occur"
    }

    id: {
      name: "id",
      Name: "Id",
      NAME: "ID",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Component identifier"
    }

    name: {
      name: "name",
      Name: "Name",
      NAME: "NAME",
      type: "string",
      Type: "String",
      TYPE: "STRING",
      short: "Component display name"
    }

    related_events: {
      name: "related_events",
      Name: "RelatedEvents",
      NAME: "RELATED_EVENTS",
      type: "object",
      Type: "Object",
      TYPE: "OBJECT",
      short: "Related incidents"
    }
  }

  cmd: {}

  id: {
    name: "id",
    field: "id"
  }

  ancestors: [
    "page",
    "component_group"
  ],
  name: "uptime",
  Name: "Uptime",
  NAME: "UPTIME",
  "key$": "uptime"


}
